                   1
                   2
  00000            3     s0      AUTOREG
  00001            4     s1      AUTOREG
  00001            5     s2      REG     0x01
W: reusing already reserved space in register file memory at address: 0x1.
  00006            6     s3      EQU     0x06
  00006            7     B       SET     6
                   8
                   9
                  10
                  11     Start:
                  12             SKIP    6
006 00110         13             LOAD    s1,s2
007 00110         14             LOAD    s1,s2
008 00110         15             LOAD    s1,s2
009 00110         16             LOAD    s1,s2
00A 00110         17             LOAD    s1,s2
00B 00110         18             LOAD    s1,s2
                  19
                  20             #WHILE   B
                  21                     SR0     s0
                  22                     B       SET     B - 1
                  23             #ENDW
00C 1400E         24 +1                  SR0     s0
  00005           25 +1                  B       SET     B - 1
00D 1400E         26 +1                  SR0     s0
  00004           27 +1                  B       SET     B - 1
00E 1400E         28 +1                  SR0     s0
  00003           29 +1                  B       SET     B - 1
00F 1400E         30 +1                  SR0     s0
  00002           31 +1                  B       SET     B - 1
010 1400E         32 +1                  SR0     s0
  00001           33 +1                  B       SET     B - 1
011 1400E         34 +1                  SR0     s0
  00000           35 +1                  B       SET     B - 1
                  36
                  37             REPT    8
                  38                     SL0     sC
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: symbol not defined: `SC'.
                  39             ENDR
012 14106         40 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
013 14106         41 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
014 14106         42 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
015 14106         43 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
016 14106         44 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
017 14106         45 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
018 14106         46 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
W: instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
E: symbol not defined: `SC'.
019 14106         47 +1                  SL0     sC
W: ==> instruction `SL0 sX' requires operand #1 to be of type(s): register; while the given operand is of type: number.
E: ==> symbol not defined: `SC'.
                  48
                  49             END
                  50
                  51
