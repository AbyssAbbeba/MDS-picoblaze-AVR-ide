                   1     ; MDS PicoBlaze IDE - Demonstration code
                   2
                   3     ; Macro instructions, conditional compilation, constants and scratch-pad ram handling.
                   4     ; See manual for more info
                   5     ; Press Start simulation and Animate to run the program
                   6
                   7     ; Constant definitions
                   8     ; --------------------
  0000F            9     counter          SET     00Fh    ; Counter of Px shifts
  00064           10     x                SET     100     ; Some variable
  00001           11     inc_dec          EQU     100 / X ; Flag: Increment/Decrement counter
  00000           12     ram_pointer      SET     00h      ; Assign name to register 3
                  13
                  14     ; Macro instructions
                  15     ; --------------------
                  16     ;; Shift the given registers
                  17     shift   MACRO    reg0, reg1
                  18
                  19             ; Increment / Decrement counter
                  20             #IF       inc_dec != 0
                  21                      inc     counter
                  22             #else
                  23                      dec     counter
                  24             #ENDIF
                  25
                  26             ; Save registers to DATA memory (Scratch-pad ram with range 00h to 3Fh)
                  27             STORE    s0, #ram_pointer + 1
E: unexpected #.
                  28             STORE    s1, #ram_pointer + 1
E: unexpected #.
                  29
                  30             ; Shift
                  31             LOAD     reg1, reg0
                  32             LOAD     reg0, reg1
                  33     ENDM
                  34
                  35     ; Program initialization
                  36     ; --------------------
  00000           37             ORG     0h                      ; Define code segment
000 22001         38             JUMP    start                   ; Jump to code initialization
                  39
                  40     ; Program start
                  41     ; --------------------
                  42     start:
001 0110F         43             LOAD     s0, #00Fh              ; Load content to shifted registers
E: symbol not defined: `S0'.
002 0111E         44             LOAD     s1, #01Eh              ;
E: symbol not defined: `S1'.
003 22004         45             JUMP    main                    ; Execute main program loop
                  46
                  47     ; Main loop
                  48     ; --------------------
                  49     main:   shift   s0, s1
E: symbol not defined: `S1'.
E: symbol not defined: `S0'.
E: symbol not defined: `S0'.
E: symbol not defined: `S1'.
004 00110         50 +1          LOAD     reg1, reg0
E: ==> symbol not defined: `S1'.
E: ==> symbol not defined: `S0'.
005 00110         51 +1          LOAD     reg0, reg1
E: ==> symbol not defined: `S0'.
E: ==> symbol not defined: `S1'.
006 22004         52             JUMP    main
                  53
                  54     ; Program end
                  55     ; --------------------
                  56             END
                  57
                  58     /*Tento program nevytváří žádný viditelný výstup, spustíme jej tedy v krokovacím režimu (debug mode)
                  59     klávesou F10. Klávesou Alt+5 zobrazíme okno "Registers", ukazující obsahy registrů.
                  60     Opakovaným stlačením klávesy F10 projděte program krok po kroku a sledujte, jak se obsahy registrů mění.
                  61       */
                  62     ; <-- Bookmark   (ctrl + shift + M)
                  63     ; <-- Breakpoint (ctrl + shift + B)
