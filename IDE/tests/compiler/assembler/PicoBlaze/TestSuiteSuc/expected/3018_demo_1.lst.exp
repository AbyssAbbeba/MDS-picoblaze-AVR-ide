                   1     ; MDS PicoBlaze IDE - Demonstration code
                   2
                   3     ; Macro instructions, conditional compilation, constants and scratch-pad ram handling.
                   4     ; See manual for more info
                   5     ; Press Start simulation and Animate to run the program
                   6     device          KCPSM3
                   7     ; Constant definitions
                   8     ; --------------------
  0000F            9     counter          SET     00Fh    ; Counter of Px shifts
  00064           10     x                SET     100     ; Some variable
  00001           11     inc_dec          EQU     100 / X ; Flag: Increment/Decrement counter
  00000           12     ram_pointer      SET     00h      ; Assign name to register 3
                  13
                  14     ; Macro instructions
                  15     ; --------------------
                  16     ;; Shift the given registers
                  17     shift   MACRO    reg0, reg1
                  18
                  19
                  20             ; Save registers to DATA memory (Scratch-pad ram with range 00h to 3Fh)
                  21             STORE    s0, ram_pointer + 1
                  22             STORE    s1, ram_pointer + 1
                  23
                  24             ; Shift
                  25             LOAD     reg1, reg0
                  26             LOAD     reg0, reg1
                  27     ENDM
                  28
                  29     ; Program initialization
                  30     ; --------------------
  00000           31             ORG     0h                      ; Define code segment
000 34001         32             JUMP    start                   ; Jump to code initialization
                  33
                  34     ; Program start
                  35     ; --------------------
  00001           36     start:
001 0000F         37             LOAD     s0, #00Fh              ; Load content to shifted registers
002 0011E         38             LOAD     s1, #01Eh              ;
003 34004         39             JUMP    main                    ; Execute main program loop
                  40
                  41     ; Main loop
                  42     ; --------------------
  00004           43     main:   shift   s0, s1
004 2E001         44 +1          STORE    s0, ram_pointer + 1
005 2E101         45 +1          STORE    s1, ram_pointer + 1
                  46 +1
                  47 +1
006 01100         48 +1          LOAD     reg1, reg0
007 01010         49 +1          LOAD     reg0, reg1
008 34004         50             JUMP    main
                  51
                  52     ; Program end
                  53     ; --------------------
                  54             END
                  55
                  56     /*Tento program nevytváří žádný viditelný výstup, spustíme jej tedy v krokovacím režimu (debug mode)
                  57     klávesou F10. Klávesou Alt+5 zobrazíme okno "Registers", ukazující obsahy registrů.
                  58     Opakovaným stlačením klávesy F10 projděte program krok po kroku a sledujte, jak se obsahy registrů mění.
                  59       */
                  60     ; <-- Bookmark   (ctrl + shift + M)
                  61     ; <-- Breakpoint (ctrl + shift + B)
