                   1
                   2     device kcpsm1
                   3     ; -------------------------------------------------------------------------------
                   4     ; SPI routines
                   5     ; data to move in s1, s1&s2, s1&s2&s3
                   6     ; uses s0, sF
                   7     ; sE: bit in the command reg of the SPI_LE pin
                   8     ; sD: address of the command register
                   9     ; sC: address of the SPI control/status register
                  10     ; -------------------------------------------------------------------------------
                  11     DEVICE          KCPSM3
                  12
  00001           13     bMOSI           EQU    0b00000001
  00080           14     bMISO           EQU    0b10000000
  00002           15     bSCLK           EQU    0b00000010
                  16
  00000           17     ESPI24:
                  18           ; address of the SPI register, contains MOSI, MISO, SCLK signals
  00000           19     SPI24:
000 0BFD0         20                     IN      sF, @sD                  ; switch on the appropriate CE
001 03EFF         21                     XOR     sE, #FFh
002 0CFE1         22                     AND     sF, sE
003 0FFD0         23                     OUT     sF, @sD
                  24
004 0C010         25                     LOAD    s0, s1
005 0831C         26                     CALL    SPI8
006 0C020         27                     LOAD    s0, s2
007 0831C         28                     CALL    SPI8
008 0C030         29                     LOAD    s0, s3
009 0831C         30                     CALL    SPI8
                  31
00A 0BFD0         32                     IN      sF, @sD
00B 03EFF         33                     XOR     sE, #FFh
00C 0CFE2         34                     OR      sF, sE
00D 0FFD0         35                     OUT     sF, @sD                  ; switch off the CE
                  36
00E 08080         37                     RET
                  38
  0000F           39     ESPI16:
                  40           ; address of the SPI register, contains MOSI, MISO, SCLK signals
  0000F           41     SPI16:
00F 0BFD0         42                     IN      sF, @sD                  ; switch on the appropriate CE
010 03EFF         43                     XOR     sE, #FFh
011 0CFE1         44                     AND     sF, sE
012 0FFD0         45                     OUT     sF, @sD
                  46
013 0C010         47                     LOAD    s0, s1
014 0831C         48                     CALL    SPI8
015 0C020         49                     LOAD    s0, s2
016 0831C         50                     CALL    SPI8
                  51
017 0BFD0         52                     IN      sF, @sD
018 03EFF         53                     XOR     sE, #FFh
019 0CFE2         54                     OR      sF, sE
01A 0FFD0         55                     OUT     sF, @sD                  ; switch off the CE
                  56
01B 08080         57                     RET
                  58
  0001C           59     ESPI8:
                  60         ; address of the SPI register, contains MOSI, MISO, SCLK signals
  0001C           61     SPI8:
01C 0BFD0         62                     IN      sF, @sD                  ; switch on the appropriate CE
01D 03EFF         63                     XOR     sE, #FFh
01E 0CFE1         64                     AND     sF, sE
01F 0FFD0         65                     OUT     sF, @sD
                  66
020 0C010         67                     LOAD    s0, s1
021 0831C         68                     CALL    SPI8
                  69
022 0BFD0         70                     IN      sF, @sD
023 03EFF         71                     XOR     sE, #FFh
024 0CFE2         72                     OR      sF, sE
025 0FFD0         73                     OUT     sF, @sD                  ; switch off the CE
                  74
026 08080         75                     RET
                  76
                  77     ; -------------------------------------------------------------------------------
                  78     ; raw SPI routines
                  79     ; byte to move in s0
                  80     ; uses sF
                  81     ; -------------------------------------------------------------------------------
                  82
  00027           83     SPI8_:                                          ; shift 8 bits
027 08328         84                     CALL    SPI4_
                  85
  00028           86     SPI4_:                                          ; shift 4 bits
028 08329         87                     CALL    SPI2_
                  88
  00029           89     SPI2_:                                          ; shift 2 bits
029 0832A         90                     CALL    SPI1_
                  91
                  92     ; -------------------------------------------------------------------------------
                  93     ; send one bit w/clock
                  94     ; -------------------------------------------------------------------------------
                  95
  0002A           96     SPI1_:                                          ; shift 1 bit
02A 0BFC0         97                     IN      sF, @sC
02B 0CFE1         98                     AND     sF, ~ bMOSI             ; clear MOSI bit
W: instruction `AND sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: expression.
R: result is negative number: 0xfffffffffffffffe, this will represented as 4-bit number in two's complement arithmetic which makes it: 0xe.
                  99
02C 0D006        100                     SL0     s0                      ; check if upper bit set
02D 0CF12        101                     OR      sF, bMOSI               ; set MOSI bit
W: instruction `OR sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
                 102
02E 0FFC0        103                     OUT     sF, @sC                  ; update MOSI signal
02F 0CF22        104                     OR      sF, bSCLK               ; set SCLK bit
W: instruction `OR sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
030 0FFC0        105                     OUT     sF, @sC                  ; update SCLK signal
031 0CFD1        106                     AND     sF, ~ bSCLK             ; clear SCLK bit
W: instruction `AND sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: expression.
R: result is negative number: 0xfffffffffffffffd, this will represented as 4-bit number in two's complement arithmetic which makes it: 0xd.
032 0FFC0        107                     OUT     sF, @sC                  ; update SCLK bit
                 108
033 0BFC0        109                     IN      sF, @sC
                 110                     TEST    sF, bMISO               ; test MISO signal
W: instruction `TEST sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: instruction not supported on the this device: TEST sX, sY.
034 09080        111                     RET     Z
035 02001        112                     OR      s0, #1                   ; reflect it in s0
036 08080        113                     RET
                 114
                 115     ; -----------SPI Subroutines end-------------------------------------------------
