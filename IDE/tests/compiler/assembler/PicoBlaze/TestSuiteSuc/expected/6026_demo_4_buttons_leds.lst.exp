                   1     ; MDS PicoBlaze IDE - Demonstration code
                   2
                   3     ; Simple code, for interfacing buttons and LEDs.
                   4     ; VHDL code is included
                   5     ; Button 1 pressed = Snake animation
                   6     ; Button 2 pressed = Blink for ten times
                   7
                   8     ; Press Start simulation and Animate to run the program
                   9     device kcpsm6
                  10
                  11     ; Constant definitions
                  12     ; --------------------
                  13     ; PORT IDs definitions
                  14
  00001           15     LEDs            PORT            0x01            ; VHDL PORT_IDs
  00002           16     Btn             PORT            0x02            ;
                  17     ; Automaticaly assign registers to symbols
  00000           18     LED_i           AUTOREG                         ; Led working register
  00001           19     BTN_i           AUTOREG                         ; Buttons working register
  0000A           20     N               SET             10              ; Number of LED blinks
                  21
  00002           22     OFF             AUTOREG                         ; Off register
  00003           23     ON              AUTOREG                         ; On register
  00004           24     SNAKE           AUTOREG                         ; Snake register
                  25     ; Declaration of registers, used in waiting loop
  00005           26     Temp1           AUTOREG
  00006           27     Temp2           AUTOREG
  00007           28     Temp3           AUTOREG
                  29
                  30
                  31     ; Macro table
                  32     ; --------------------
                  33     ; Waiting loop macro
                  34
                  35     wait_for_100ms      MACRO
                  36
                  37                         LOCAL     wait_100ms
                  38                         LOCAL     wait_100ms_i
                  39
                  40     wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
                  41                         LOAD      Temp2, #249          ; Load Temp2 register
                  42                         LOAD      Temp3, #20           ; Load Temp3 register
                  43     wait_100ms_i:       SUB       Temp1, #1
                  44                         JUMP      NZ, wait_100ms_i
                  45                         SUB       Temp2, #1
                  46                         JUMP      NZ, wait_100ms_i
                  47                         SUB       Temp3, #1
                  48                         JUMP      NZ, wait_100ms_i
                  49                         ENDM
                  50
                  51     ; Program initialization
                  52     ; --------------------
  00000           53             ORG     0h                      ; Define code segment
000 220D9         54             JUMP    start                   ; Jump to code initialization
                  55
                  56
                  57     ; Subroutines
                  58     ;-------------------------
001 2D401         59     Snake_i:        OUTPUT          Snake,LEDs        ; Turn LEDs OFF
                  60                                                       ; REPT directive is very good for repeating blocks of code
                  61                     REPT            7                 ; Moving right
                  62                     RR              Snake
                  63                     ENDR
002 1440C         64 +1                  RR              Snake
003 1440C         65 +1                  RR              Snake
004 1440C         66 +1                  RR              Snake
005 1440C         67 +1                  RR              Snake
006 1440C         68 +1                  RR              Snake
007 1440C         69 +1                  RR              Snake
008 1440C         70 +1                  RR              Snake
                  71
                  72                     REPT            7                 ; Moving left
                  73                     RL              Snake
                  74                     ENDR
009 14402         75 +1                  RL              Snake
00A 14402         76 +1                  RL              Snake
00B 14402         77 +1                  RL              Snake
00C 14402         78 +1                  RL              Snake
00D 14402         79 +1                  RL              Snake
00E 14402         80 +1                  RL              Snake
00F 14402         81 +1                  RL              Snake
                  82
                  83     ; Blinks with LEDs for N times.
                  84     ;--------------------------
  00010           85     Blink_i:        #WHILE   N
                  86                     N       SET     N - 1           ; Blinks defined by N
                  87
                  88                     OUTPUT          ON,LEDs         ; Turn LEDs ON
                  89                     wait_for_100ms
                  90                     OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                  91                     wait_for_100ms
                  92
                  93                     #ENDW
  00009           94 +1                  N       SET     N - 1           ; Blinks defined by N
                  95 +1
010 2D301         96 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                  97 +1                  wait_for_100ms
                  98 +2                      LOCAL     wait_100ms
                  99 +2                      LOCAL     wait_100ms_i
                 100 +2
011 015FA        101 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
012 016F9        102 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
013 01714        103 +2                      LOAD      Temp2, #249          ; Load Temp2 register
014 19501        104 +2                      LOAD      Temp3, #20           ; Load Temp3 register
015 36014        105 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
016 19601        106 +2  wait_100ms_i:       SUB       Temp1, #1
017 36014        107 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
018 19701        108 +2                      SUB       Temp2, #1
019 36014        109 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 110 +2                      SUB       Temp3, #1
                 111 +2                      JUMP      NZ, wait_100ms_i
01A 2D201        112 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 113 +1                  wait_for_100ms
                 114 +2                      LOCAL     wait_100ms
                 115 +2                      LOCAL     wait_100ms_i
                 116 +2
01B 015FA        117 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
01C 016F9        118 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
01D 01714        119 +2                      LOAD      Temp2, #249          ; Load Temp2 register
01E 19501        120 +2                      LOAD      Temp3, #20           ; Load Temp3 register
01F 3601E        121 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
020 19601        122 +2  wait_100ms_i:       SUB       Temp1, #1
021 3601E        123 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
022 19701        124 +2                      SUB       Temp2, #1
023 3601E        125 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 126 +2                      SUB       Temp3, #1
                 127 +2                      JUMP      NZ, wait_100ms_i
  00008          128 +1                  N       SET     N - 1           ; Blinks defined by N
                 129 +1
024 2D301        130 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 131 +1                  wait_for_100ms
                 132 +2                      LOCAL     wait_100ms
                 133 +2                      LOCAL     wait_100ms_i
                 134 +2
025 015FA        135 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
026 016F9        136 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
027 01714        137 +2                      LOAD      Temp2, #249          ; Load Temp2 register
028 19501        138 +2                      LOAD      Temp3, #20           ; Load Temp3 register
029 36028        139 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
02A 19601        140 +2  wait_100ms_i:       SUB       Temp1, #1
02B 36028        141 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
02C 19701        142 +2                      SUB       Temp2, #1
02D 36028        143 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 144 +2                      SUB       Temp3, #1
                 145 +2                      JUMP      NZ, wait_100ms_i
02E 2D201        146 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 147 +1                  wait_for_100ms
                 148 +2                      LOCAL     wait_100ms
                 149 +2                      LOCAL     wait_100ms_i
                 150 +2
02F 015FA        151 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
030 016F9        152 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
031 01714        153 +2                      LOAD      Temp2, #249          ; Load Temp2 register
032 19501        154 +2                      LOAD      Temp3, #20           ; Load Temp3 register
033 36032        155 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
034 19601        156 +2  wait_100ms_i:       SUB       Temp1, #1
035 36032        157 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
036 19701        158 +2                      SUB       Temp2, #1
037 36032        159 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 160 +2                      SUB       Temp3, #1
                 161 +2                      JUMP      NZ, wait_100ms_i
  00007          162 +1                  N       SET     N - 1           ; Blinks defined by N
                 163 +1
038 2D301        164 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 165 +1                  wait_for_100ms
                 166 +2                      LOCAL     wait_100ms
                 167 +2                      LOCAL     wait_100ms_i
                 168 +2
039 015FA        169 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
03A 016F9        170 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
03B 01714        171 +2                      LOAD      Temp2, #249          ; Load Temp2 register
03C 19501        172 +2                      LOAD      Temp3, #20           ; Load Temp3 register
03D 3603C        173 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
03E 19601        174 +2  wait_100ms_i:       SUB       Temp1, #1
03F 3603C        175 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
040 19701        176 +2                      SUB       Temp2, #1
041 3603C        177 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 178 +2                      SUB       Temp3, #1
                 179 +2                      JUMP      NZ, wait_100ms_i
042 2D201        180 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 181 +1                  wait_for_100ms
                 182 +2                      LOCAL     wait_100ms
                 183 +2                      LOCAL     wait_100ms_i
                 184 +2
043 015FA        185 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
044 016F9        186 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
045 01714        187 +2                      LOAD      Temp2, #249          ; Load Temp2 register
046 19501        188 +2                      LOAD      Temp3, #20           ; Load Temp3 register
047 36046        189 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
048 19601        190 +2  wait_100ms_i:       SUB       Temp1, #1
049 36046        191 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
04A 19701        192 +2                      SUB       Temp2, #1
04B 36046        193 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 194 +2                      SUB       Temp3, #1
                 195 +2                      JUMP      NZ, wait_100ms_i
  00006          196 +1                  N       SET     N - 1           ; Blinks defined by N
                 197 +1
04C 2D301        198 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 199 +1                  wait_for_100ms
                 200 +2                      LOCAL     wait_100ms
                 201 +2                      LOCAL     wait_100ms_i
                 202 +2
04D 015FA        203 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
04E 016F9        204 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
04F 01714        205 +2                      LOAD      Temp2, #249          ; Load Temp2 register
050 19501        206 +2                      LOAD      Temp3, #20           ; Load Temp3 register
051 36050        207 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
052 19601        208 +2  wait_100ms_i:       SUB       Temp1, #1
053 36050        209 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
054 19701        210 +2                      SUB       Temp2, #1
055 36050        211 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 212 +2                      SUB       Temp3, #1
                 213 +2                      JUMP      NZ, wait_100ms_i
056 2D201        214 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 215 +1                  wait_for_100ms
                 216 +2                      LOCAL     wait_100ms
                 217 +2                      LOCAL     wait_100ms_i
                 218 +2
057 015FA        219 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
058 016F9        220 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
059 01714        221 +2                      LOAD      Temp2, #249          ; Load Temp2 register
05A 19501        222 +2                      LOAD      Temp3, #20           ; Load Temp3 register
05B 3605A        223 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
05C 19601        224 +2  wait_100ms_i:       SUB       Temp1, #1
05D 3605A        225 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
05E 19701        226 +2                      SUB       Temp2, #1
05F 3605A        227 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 228 +2                      SUB       Temp3, #1
                 229 +2                      JUMP      NZ, wait_100ms_i
  00005          230 +1                  N       SET     N - 1           ; Blinks defined by N
                 231 +1
060 2D301        232 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 233 +1                  wait_for_100ms
                 234 +2                      LOCAL     wait_100ms
                 235 +2                      LOCAL     wait_100ms_i
                 236 +2
061 015FA        237 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
062 016F9        238 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
063 01714        239 +2                      LOAD      Temp2, #249          ; Load Temp2 register
064 19501        240 +2                      LOAD      Temp3, #20           ; Load Temp3 register
065 36064        241 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
066 19601        242 +2  wait_100ms_i:       SUB       Temp1, #1
067 36064        243 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
068 19701        244 +2                      SUB       Temp2, #1
069 36064        245 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 246 +2                      SUB       Temp3, #1
                 247 +2                      JUMP      NZ, wait_100ms_i
06A 2D201        248 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 249 +1                  wait_for_100ms
                 250 +2                      LOCAL     wait_100ms
                 251 +2                      LOCAL     wait_100ms_i
                 252 +2
06B 015FA        253 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
06C 016F9        254 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
06D 01714        255 +2                      LOAD      Temp2, #249          ; Load Temp2 register
06E 19501        256 +2                      LOAD      Temp3, #20           ; Load Temp3 register
06F 3606E        257 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
070 19601        258 +2  wait_100ms_i:       SUB       Temp1, #1
071 3606E        259 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
072 19701        260 +2                      SUB       Temp2, #1
073 3606E        261 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 262 +2                      SUB       Temp3, #1
                 263 +2                      JUMP      NZ, wait_100ms_i
  00004          264 +1                  N       SET     N - 1           ; Blinks defined by N
                 265 +1
074 2D301        266 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 267 +1                  wait_for_100ms
                 268 +2                      LOCAL     wait_100ms
                 269 +2                      LOCAL     wait_100ms_i
                 270 +2
075 015FA        271 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
076 016F9        272 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
077 01714        273 +2                      LOAD      Temp2, #249          ; Load Temp2 register
078 19501        274 +2                      LOAD      Temp3, #20           ; Load Temp3 register
079 36078        275 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
07A 19601        276 +2  wait_100ms_i:       SUB       Temp1, #1
07B 36078        277 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
07C 19701        278 +2                      SUB       Temp2, #1
07D 36078        279 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 280 +2                      SUB       Temp3, #1
                 281 +2                      JUMP      NZ, wait_100ms_i
07E 2D201        282 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 283 +1                  wait_for_100ms
                 284 +2                      LOCAL     wait_100ms
                 285 +2                      LOCAL     wait_100ms_i
                 286 +2
07F 015FA        287 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
080 016F9        288 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
081 01714        289 +2                      LOAD      Temp2, #249          ; Load Temp2 register
082 19501        290 +2                      LOAD      Temp3, #20           ; Load Temp3 register
083 36082        291 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
084 19601        292 +2  wait_100ms_i:       SUB       Temp1, #1
085 36082        293 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
086 19701        294 +2                      SUB       Temp2, #1
087 36082        295 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 296 +2                      SUB       Temp3, #1
                 297 +2                      JUMP      NZ, wait_100ms_i
  00003          298 +1                  N       SET     N - 1           ; Blinks defined by N
                 299 +1
088 2D301        300 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 301 +1                  wait_for_100ms
                 302 +2                      LOCAL     wait_100ms
                 303 +2                      LOCAL     wait_100ms_i
                 304 +2
089 015FA        305 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
08A 016F9        306 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
08B 01714        307 +2                      LOAD      Temp2, #249          ; Load Temp2 register
08C 19501        308 +2                      LOAD      Temp3, #20           ; Load Temp3 register
08D 3608C        309 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
08E 19601        310 +2  wait_100ms_i:       SUB       Temp1, #1
08F 3608C        311 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
090 19701        312 +2                      SUB       Temp2, #1
091 3608C        313 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 314 +2                      SUB       Temp3, #1
                 315 +2                      JUMP      NZ, wait_100ms_i
092 2D201        316 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 317 +1                  wait_for_100ms
                 318 +2                      LOCAL     wait_100ms
                 319 +2                      LOCAL     wait_100ms_i
                 320 +2
093 015FA        321 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
094 016F9        322 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
095 01714        323 +2                      LOAD      Temp2, #249          ; Load Temp2 register
096 19501        324 +2                      LOAD      Temp3, #20           ; Load Temp3 register
097 36096        325 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
098 19601        326 +2  wait_100ms_i:       SUB       Temp1, #1
099 36096        327 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
09A 19701        328 +2                      SUB       Temp2, #1
09B 36096        329 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 330 +2                      SUB       Temp3, #1
                 331 +2                      JUMP      NZ, wait_100ms_i
  00002          332 +1                  N       SET     N - 1           ; Blinks defined by N
                 333 +1
09C 2D301        334 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 335 +1                  wait_for_100ms
                 336 +2                      LOCAL     wait_100ms
                 337 +2                      LOCAL     wait_100ms_i
                 338 +2
09D 015FA        339 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
09E 016F9        340 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
09F 01714        341 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0A0 19501        342 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0A1 360A0        343 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0A2 19601        344 +2  wait_100ms_i:       SUB       Temp1, #1
0A3 360A0        345 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0A4 19701        346 +2                      SUB       Temp2, #1
0A5 360A0        347 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 348 +2                      SUB       Temp3, #1
                 349 +2                      JUMP      NZ, wait_100ms_i
0A6 2D201        350 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 351 +1                  wait_for_100ms
                 352 +2                      LOCAL     wait_100ms
                 353 +2                      LOCAL     wait_100ms_i
                 354 +2
0A7 015FA        355 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0A8 016F9        356 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0A9 01714        357 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0AA 19501        358 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0AB 360AA        359 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0AC 19601        360 +2  wait_100ms_i:       SUB       Temp1, #1
0AD 360AA        361 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0AE 19701        362 +2                      SUB       Temp2, #1
0AF 360AA        363 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 364 +2                      SUB       Temp3, #1
                 365 +2                      JUMP      NZ, wait_100ms_i
  00001          366 +1                  N       SET     N - 1           ; Blinks defined by N
                 367 +1
0B0 2D301        368 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 369 +1                  wait_for_100ms
                 370 +2                      LOCAL     wait_100ms
                 371 +2                      LOCAL     wait_100ms_i
                 372 +2
0B1 015FA        373 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0B2 016F9        374 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0B3 01714        375 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0B4 19501        376 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0B5 360B4        377 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0B6 19601        378 +2  wait_100ms_i:       SUB       Temp1, #1
0B7 360B4        379 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0B8 19701        380 +2                      SUB       Temp2, #1
0B9 360B4        381 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 382 +2                      SUB       Temp3, #1
                 383 +2                      JUMP      NZ, wait_100ms_i
0BA 2D201        384 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 385 +1                  wait_for_100ms
                 386 +2                      LOCAL     wait_100ms
                 387 +2                      LOCAL     wait_100ms_i
                 388 +2
0BB 015FA        389 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0BC 016F9        390 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0BD 01714        391 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0BE 19501        392 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0BF 360BE        393 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0C0 19601        394 +2  wait_100ms_i:       SUB       Temp1, #1
0C1 360BE        395 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0C2 19701        396 +2                      SUB       Temp2, #1
0C3 360BE        397 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 398 +2                      SUB       Temp3, #1
                 399 +2                      JUMP      NZ, wait_100ms_i
  00000          400 +1                  N       SET     N - 1           ; Blinks defined by N
                 401 +1
0C4 2D301        402 +1                  OUTPUT          ON,LEDs         ; Turn LEDs ON
                 403 +1                  wait_for_100ms
                 404 +2                      LOCAL     wait_100ms
                 405 +2                      LOCAL     wait_100ms_i
                 406 +2
0C5 015FA        407 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0C6 016F9        408 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0C7 01714        409 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0C8 19501        410 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0C9 360C8        411 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0CA 19601        412 +2  wait_100ms_i:       SUB       Temp1, #1
0CB 360C8        413 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0CC 19701        414 +2                      SUB       Temp2, #1
0CD 360C8        415 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 416 +2                      SUB       Temp3, #1
                 417 +2                      JUMP      NZ, wait_100ms_i
0CE 2D201        418 +1                  OUTPUT          OFF,LEDs        ; Turn LEDs OFF
                 419 +1                  wait_for_100ms
                 420 +2                      LOCAL     wait_100ms
                 421 +2                      LOCAL     wait_100ms_i
                 422 +2
0CF 015FA        423 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0D0 016F9        424 +2  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0D1 01714        425 +2                      LOAD      Temp2, #249          ; Load Temp2 register
0D2 19501        426 +2                      LOAD      Temp3, #20           ; Load Temp3 register
0D3 360D2        427 +2  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0D4 19601        428 +2  wait_100ms_i:       SUB       Temp1, #1
0D5 360D2        429 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0D6 19701        430 +2                      SUB       Temp2, #1
0D7 360D2        431 +2                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 432 +2                      SUB       Temp3, #1
                 433 +2                      JUMP      NZ, wait_100ms_i
0D8 25000        434                     RETURN
                 435
                 436
                 437     ; Program start
                 438     ; --------------------
  000D9          439     start:
                 440             wait_for_100ms                  ; FPGA circuits startup time
                 441 +1                      LOCAL     wait_100ms
                 442 +1                      LOCAL     wait_100ms_i
                 443 +1
0D9 015FA        444 +1  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0DA 016F9        445 +1  wait_100ms:         LOAD      Temp1, #250          ; Load Temp1 register
0DB 01714        446 +1                      LOAD      Temp2, #249          ; Load Temp2 register
0DC 19501        447 +1                      LOAD      Temp3, #20           ; Load Temp3 register
0DD 360DC        448 +1  wait_100ms_i:       SUB       Temp1, #1
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0DE 19601        449 +1  wait_100ms_i:       SUB       Temp1, #1
0DF 360DC        450 +1                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
0E0 19701        451 +1                      SUB       Temp2, #1
0E1 360DC        452 +1                      JUMP      NZ, wait_100ms_i
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: expression.
                 453 +1                      SUB       Temp3, #1
                 454 +1                      JUMP      NZ, wait_100ms_i
0E2 013FF        455             LOAD    ON,  #0xFF              ; Declare ON, snake and OFF
0E3 01200        456             LOAD    OFF, #0x00              ;
0E4 01401        457             LOAD    Snake, #0x01            ;
0E5 220E6        458             JUMP    main                    ; Execute main program loop
                 459
                 460     ; Main loop
                 461     ; --------------------
0E6 09102        462     main:   INPUT   BTN_i,Btn               ; Save buttons status
0E7 0C110        463             TEST    BTN_i,1                 ; Button one pressed
W: instruction `TEST sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
0E8 3A001        464             JUMP    C,Snake_i               ; JUMP to snake subroutine
0E9 0C120        465             TEST    BTN_i,2                 ; Button two pressed
W: instruction `TEST sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
0EA 3A010        466             JUMP    C,Blink_i               ; JUMP to Blink subroutine
0EB 220E6        467             JUMP    main
                 468     ; Program end
                 469     ; --------------------
                 470             END
                 471
                 472     ; <-- Bookmark   (ctrl + shift + M)
                 473     ; <-- Breakpoint (ctrl + shift + B)
