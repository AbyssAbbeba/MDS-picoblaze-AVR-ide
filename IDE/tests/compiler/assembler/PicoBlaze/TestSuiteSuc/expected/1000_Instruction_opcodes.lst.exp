                   1     ; Compiler load case for Assembler
                   2     ; instruction opcodes
                   3     device kcpsm1
                   4
  00001            5     loadsymb1    SET        1h
  00011            6     loadsymb2    SET        0x11
  00001            7     loadsymb3    SET        1
  00003            8     loadsymb4    SET        3d
  00004            9     loadsymb5    EQU        4h
  00005           10     loadsymb6    EQU        0x05
  00006           11     loadsymb7    EQU        6
  00007           12     loadsymb8    EQU        7
  00008           13     loadsymb9    REG        8h
  00009           14     loadsymb10    REG        9h
  0000A           15     loadsymb11    REG        Ah
  0000B           16     loadsymb12    REG        Bh
  0000C           17     loadsymb13    DATA        Ch
  00005           18     loadsymb14    DATA        0x05
  00002           19     loadsymb15    DATA        2
  00003           20     loadsymb16    DATA        3d
  00002           21     loadsymb17    CODE        0h + 2h
  00002           22     loadsymb18    CODE        2h
  00002           23     loadsymb19    CODE        2h
  00002           24     loadsymb20    CODE        2h
                  25     loadsymb21    DEFINE        3h
                  26     loadsymb22    DEFINE        4h
                  27     loadsymb23    DEFINE        5h
                  28     loadsymb24    DEFINE        loadsymb1 + loadsymb11
                  29
                  30
  00000           31               ORG        0x000
000 08102         32               JUMP        Start
001 08100         33               JUMP        0x000
W: instruction `JUMP aaa' requires operand #1 to be of type(s): label; while the given operand is of type: number.
  00002           34     Start:
002 09100         35             JUMP        Z, 0x000
W: instruction `JUMP Z, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: number.
003 09500         36             JUMP        NZ,0x000
W: instruction `JUMP NZ, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: number.
004 09900         37             JUMP        C, 0x000
W: instruction `JUMP C, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: number.
005 09D00         38             JUMP        NC,0x000
W: instruction `JUMP NC, aaa' requires operand #2 to be of type(s): label; while the given operand is of type: number.
                  39
                  40          ; Arithmetics
006 0480C         41             ADD         loadsymb9,#12
007 05814         42             ADDCY       loadsymb9,#20
008 068FF         43             SUB         loadsymb9,#ffh
009 078FF         44             SUBCY       loadsymb9,#0xff
                  45
                  46
00A 0C884         47             ADD         loadsymb9,loadsymb9
00B 0C885         48             ADDCY       loadsymb9,loadsymb9
00C 0C886         49             SUB         loadsymb9,loadsymb9
00D 0C897         50             SUBCY       loadsymb9,loadsymb10
                  51
                  52
                  53     ; Logical
00E 00801         54             LOAD      loadsymb9,#01h
00F 01800         55             AND       loadsymb9,#0
010 02801         56             OR        loadsymb9,#1
011 03802         57             XOR       loadsymb9,#2
                  58
                  59
012 0C880         60             LOAD      loadsymb9,loadsymb9
013 0C881         61             AND       loadsymb9,loadsymb9
014 0C882         62             OR        loadsymb9,loadsymb9
015 0C883         63             XOR       loadsymb9,loadsymb9
                  64
                  65     ; Shiload and rotate
016 0D90E         66             SR0       loadsymb10
017 0D90F         67             SR1       loadsymb10
018 0D90A         68             SRX        loadsymb10
019 0D908         69             SRA        loadsymb10
01A 0D90C         70             RR         loadsymb10
                  71
01B 0D906         72             SL0       loadsymb10
01C 0D907         73             SL1       loadsymb10
01D 0D904         74             SLX       loadsymb10
01E 0D900         75             SLA       loadsymb10
01F 0D902         76             RL        loadsymb10
                  77         ; Others
020 08325         78             CALl      Podprog
021 09325         79             CALL      Z,Podprog
022 09725         80             CALL      NZ,Podprog
023 09B25         81             CALL      C,Podprog
024 09F25         82             CALL      NC,Podprog
                  83
  00025           84     Podprog:
025 08080         85             RETURN
026 09080         86             RETURN    Z
027 09480         87             RETURN    NZ
028 09880         88             RETURN    C
029 09C80         89             RETURN    NC
                  90
                  91
                  92       ;  JUMP aaa ADD sX,kk LOAD sX,kk SR0 sX
                  93     ;JUMP Z,aaa ADDCY sX,kk AND sX,kk SR1 sX
                  94     ;JUMP NZ,aaa SUB sX,kk OR sX,kk SRX sX
                  95     ;JUMP C,aaa SUBCY sX,kk XOR sX,kk SRA sX
                  96     ;JUMP NC,aaa load sX,kk load sX,kk RR sX
                  97     ;CALL aaa ADD sX,sY LOAD sX,sY SL0 sX
                  98     ;CALL Z,aaa ADDCY sX,sY AND sX,sY SL1 sX
                  99     ;CALL NZ,aaa SUB sX,sY OR sX,sY SLX sX
                 100     ;CALL C,aaa SUBCY sX,sY XOR sX,sY SLA sX
                 101     ;CALL NC,aaa load sX,sY load sX,sY RL sX
