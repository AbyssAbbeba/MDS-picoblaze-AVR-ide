                   1     ; KCPSM3 Program - Communication with DS2432 secure memory on the Spartan-3E Starter Kit.
                   2     device kcpsm1
                   3     ; Ken Chapman - Xilinx Ltd
                   4     ;
                   5     ; Version v1.00 - 5th April 2006
                   6     ;
                   7     ; This program uses a 9600 baud UART connection to allow communication with the
                   8     ; 1-wire interface of the DS2432 memory device from Dallas Semiconductor.
                   9     ;
                  10     ; The program only supports a limited number of the DS2432 commands but is intended
                  11     ; to guide you through the state machine of the device as well as show how
                  12     ; 1-wire communication is achieved. The DS2432 also uses 8 and 16 bits CRC checks and
                  13     ; this program includes these calculations to validate the communications.
                  14     ;
                  15     ; Commands supported include read ROM, write scratchpad memory and read scratchpad
                  16     ; memory. These allow you to confirm the ability to both read and write EQU but
                  17     ; at no time modify the actual EEPROM secure memory or secret.
                  18     ;
                  19     ; There are then two manual commands which allow you to write any byte value that
                  20     ; you enter and to read a byte from the DS2432 device. At this point you are free
                  21     ; to experiment and this may result in the device contents being altered. You also
                  22     ; become responsible for tracking the states but remember that a master reset will
                  23     ; always return you to a known starting point again.
                  24     ;
                  25     ;
                  26     ;**************************************************************************************
                  27     ; Port definitions
                  28     ;**************************************************************************************
                  29     ;
                  30     ;
  00000           31     status_port             EQU             0x00                    ;UART status input
  00001           32     tx_half_full            EQU             0x01                    ;  Transmitter     half full - bit0
  00002           33     tx_full                 EQU             0x02                    ;    FIFO               full - bit1
  00004           34     rx_EQU_present         EQU             0x04                    ;  Receiver     EQU present - bit2
  00008           35     rx_half_full            EQU             0x08                    ;    FIFO          half full - bit3
  00010           36     rx_full                 EQU             0x10                    ;                   full - bit4
  00020           37     spare1                  EQU             0x20                    ;                  spare '0' - bit5
  00040           38     spare2                  EQU             0x40                    ;                  spare '0' - bit6
  00080           39     spare3                  EQU             0x80                    ;                  spare '0' - bit7
                  40     ;
  00001           41     uart_read_port          EQU             0x01                    ;UART Rx EQU input
                  42     ;
  00004           43     uart_write_port         EQU             0x04                    ;UART Tx EQU output
                  44     ;
                  45     ;
  00002           46     ds_wire_in_port         EQU             0x02                    ;Read signal from DS2432 device
  00008           47     ds_wire_out_port        EQU             0x08                    ;Drive signal to DS2432 device (open collector)
  00001           48     ds_wire                 EQU             0x01                    ;       Signal is bit0 in both cases
                  49     ;
                  50     ;
                  51     ;
                  52     ;
                  53     ;**************************************************************************************
                  54     ; Special Register usage
                  55     ;**************************************************************************************
                  56     ;
  0000F           57     uart_EQU               REG             sf                      ;used to pass EQU to and from the UART
                  58     ;
                  59     ;
                  60     ;**************************************************************************************
                  61     ; Scratch Pad Memory Locations
                  62     ;**************************************************************************************
                  63     ;
                  64     ; Scratch pad memory provides 64 bytes in the address range 00 to 3F hex.
                  65     ;
                  66     ;
                  67     ; Locations for device family code, serial number and 8-bit CRC value
                  68     ;
  00000           69     family_code             EQU             0x00
  00001           70     serial_number0          EQU             0x01                    ;48-bit serial number LS-Byte first
  00002           71     serial_number1          EQU             0x02
  00003           72     serial_number2          EQU             0x03
  00004           73     serial_number3          EQU             0x04
  00005           74     serial_number4          EQU             0x05
  00006           75     serial_number5          EQU             0x06
  00007           76     read_rom_crc            EQU             0x07                    ;8-bit CRC
                  77     ;
                  78     ;
                  79     ; Locations to load all bytes in a command communication for 16-bit CRC calculation
                  80     ;
  00008           81     command_start           EQU             0x08
                  82     ;
                  83     ;
                  84     ;**************************************************************************************
                  85     ; Useful EQU constants
                  86     ;**************************************************************************************
                  87     ;
                  88     ; Constant to define a soloadware delay of 1us. This must be adjusted to reflect the
                  89     ; clock applied to KCPSM3. Every instruction executes in 2 clock cycles making the
                  90     ; calculation highly predictable. The '6' in the following equation even allows for
                  91     ; 'CALL delay_1us' instruction in the initiating code.
                  92     ;
                  93     ; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
                  94     ;
                  95     ; Example: For a 50MHz clock the constant value is (10-6)/4 = 11  (0B Hex).
                  96     ; For clock rates below 10MHz the value of 1 must be used and the operation will
                  97     ; become lower than intended.
                  98     ;
  0000B           99     delay_1us_constant      EQU             0x0b
                 100     ;
                 101     ;
                 102     ;
                 103     ;ASCII table
                 104     ;
  00061          105     character_a             EQU             0x61
  00062          106     character_b             EQU             0x62
  00063          107     character_c             EQU             0x63
  00064          108     character_d             EQU             0x64
  00065          109     character_e             EQU             0x65
  00066          110     character_f             EQU             0x66
  00067          111     character_g             EQU             0x67
  00068          112     character_h             EQU             0x68
  00069          113     character_i             EQU             0x69
  0006A          114     character_j             EQU             0x6a
  0006B          115     character_k             EQU             0x6b
  0006C          116     character_l             EQU             0x6c
  0006D          117     character_m             EQU             0x6d
  0006E          118     character_n             EQU             0x6e
  0006F          119     character_o             EQU             0x6f
  00070          120     character_p             EQU             0x70
  00071          121     character_q             EQU             0x71
  00072          122     character_r             EQU             0x72
  00073          123     character_s             EQU             0x73
  00074          124     character_t             EQU             0x74
  00075          125     character_u             EQU             0x75
  00076          126     character_v             EQU             0x76
  00077          127     character_w             EQU             0x77
  00078          128     character_x             EQU             0x78
  00079          129     character_y             EQU             0x79
  0007A          130     character_z             EQU             0x7a
  00041          131     _character_a            EQU             0x41
  00042          132     _character_b            EQU             0x42
  00043          133     _character_c            EQU             0x43
  00044          134     _character_d            EQU             0x44
  00045          135     _character_e            EQU             0x45
  00046          136     _character_f            EQU             0x46
  00047          137     _character_g            EQU             0x47
  00048          138     _character_h            EQU             0x48
  00049          139     _character_i            EQU             0x49
  0004A          140     _character_j            EQU             0x4a
  0004B          141     _character_k            EQU             0x4b
  0004C          142     _character_l            EQU             0x4c
  0004D          143     _character_m            EQU             0x4d
  0004E          144     _character_n            EQU             0x4e
  0004F          145     _character_o            EQU             0x4f
  00050          146     _character_p            EQU             0x50
  00051          147     _character_q            EQU             0x51
  00052          148     _character_r            EQU             0x52
  00053          149     _character_s            EQU             0x53
  00054          150     _character_t            EQU             0x54
  00055          151     _character_u            EQU             0x55
  00056          152     _character_v            EQU             0x56
  00057          153     _character_w            EQU             0x57
  00058          154     _character_x            EQU             0x58
  00059          155     _character_y            EQU             0x59
  0005A          156     _character_z            EQU             0x5a
  00030          157     character_0             EQU             0x30
  00031          158     character_1             EQU             0x31
  00032          159     character_2             EQU             0x32
  00033          160     character_3             EQU             0x33
  00034          161     character_4             EQU             0x34
  00035          162     character_5             EQU             0x35
  00036          163     character_6             EQU             0x36
  00037          164     character_7             EQU             0x37
  00038          165     character_8             EQU             0x38
  00039          166     character_9             EQU             0x39
  0003A          167     character_colon         EQU             0x3a
  0002E          168     character_fullstop      EQU             0x2e
  0003B          169     character_semi_colon    EQU             0x3b
  0002D          170     character_minus         EQU             0x2d
  0002B          171     character_plus          EQU             0x2b
  0002C          172     character_comma         EQU             0x2c
  0003C          173     character_less_than     EQU             0x3c                    ;'<'
  0003E          174     character_greater_than  EQU             0x3e                    ;'>'
  00028          175     character_open          EQU             0x28                    ;'('
  00029          176     character_close         EQU             0x29                    ;')'
  0002F          177     character_divide        EQU             0x2f                    ;'/'
  0003D          178     character_equals        EQU             0x3d
  00020          179     character_space         EQU             0x20
  0000D          180     character_cr            EQU             0x0d                    ;carriage return
  0000A          181     character_lf            EQU             0x0a                    ;line feed
  0003F          182     character_question      EQU             0x3f                    ;'?'
  00024          183     character_dollar        EQU             0x24
  00021          184     character_exclaim       EQU             0x21                    ;'!'
  00008          185     character_bs            EQU             0x08                    ;Back Space command character
  00011          186     character_xon           EQU             0x11                    ;Flow control ON
  00013          187     character_xoff          EQU             0x13                    ;Flow control OFF
                 188     ;
                 189     ;
                 190     ;**************************************************************************************
                 191     ; Initialise the system and welcome message
                 192     ;**************************************************************************************
                 193     ;
000 08343        194     cold_start:             CALL            ds_wire_init            ;Ensure DS_wire is not driven (pulled High)
W: value out of range: 0x143, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x43.
001 083AD        195                             CALL            delay_1s                ;Allow everything to settle!
W: value out of range: 0x1ad, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xad.
002 08328        196     welcome_start:          CALL            send_welcome            ;start up message and version number
W: value out of range: 0x228, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x28.
                 197     ;
                 198     ;
                 199     ;
                 200     ; The main program guides the user to follow the command state machine of the
                 201     ; DS2432 device by only offering those choices that are valid at each stage.
                 202     ; This program only offers a limited choice and it is leload as an exercise to
                 203     ; the user to modify or expand this choice as required.
                 204     ;
                 205     ;**************************************************************************************
                 206     ; Reset Main menu and command selection
                 207     ;**************************************************************************************
                 208     ;
                 209     ; Initially the only action available is a master reset and load for a presence
                 210     ; pulse response from the DS2432.
                 211     ;
003 0836F        212     reset_menu:             CALL            send_reset_menu         ;Menu and command selection
W: value out of range: 0x26f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x6f.
004 0831F        213                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
                 214     ;
005 08333        215     reset_prompt:           CALL            menu_prompt             ;prompt for user input
006 00048        216                             load         s0, #_character_h       ;load for commands and execute as required
007 09103        217                             JUMP            z, reset_menu
008 00031        218                             load         s0, #character_1
009 0910C        219                             JUMP            z, master_reset_regular
00A 08339        220                             CALL            no_valid_input
00B 08105        221                             JUMP            reset_prompt            ;Try again!
                 222     ;
                 223     ; The master reset should result in a presence pulse.
                 224     ; This will be reported and control passed to the appropriate
                 225     ; menu in the sequence.
                 226     ;
00C 0831F        227     master_reset_regular:   CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
00D 08346        228                             CALL            ds_init_regular_mode
W: value out of range: 0x146, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x46.
00E 09D11        229                             JUMP            nc, reset_passed        ;load for presence pulse
00F 0834D        230                             CALL            send_fail
W: value out of range: 0x34d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x4d.
010 08103        231                             JUMP            reset_menu              ;fail stays in reset menu
011 08345        232     reset_passed:           CALL            send_pass               ;pass progresses to ROM menu
W: value out of range: 0x345, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x45.
012 08113        233                             JUMP            rom_menu
                 234     ;
                 235     ; Aloader a valid master reset, the only commands available are the ROM
                 236     ; commands of which only Read ROM and Skip ROM are currently supported.
                 237     ; Another master reset can be issued is so desired.
                 238     ;
013 08378        239     rom_menu:               CALL            send_rom_menu           ;Menu and command selection
W: value out of range: 0x278, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x78.
014 0831F        240                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
                 241     ;
015 08333        242     rom_prompt:             CALL            menu_prompt             ;prompt for user input
016 00048        243                             load         s0, #_character_h       ;load for commands and execute as required
017 09113        244                             JUMP            z, rom_menu
018 00031        245                             load         s0, #character_1
019 0910C        246                             JUMP            z, master_reset_regular ;repeat reset as before
01A 00032        247                             load         s0, #character_2
01B 0913F        248                             JUMP            z, read_rom_command
01C 00033        249                             load         s0, #character_3
01D 09162        250                             JUMP            z, skip_rom_command
01E 08339        251                             CALL            no_valid_input
01F 08115        252                             JUMP            rom_prompt              ;Try again!
                 253     ;
                 254     ;
                 255     ;
                 256     ; Aloader a valid ROM command the DS2432 specific memory commands and SHA-1
                 257     ; functions become accessible. Each of these end with the DS2432 returned
                 258     ; back to the waiting for ROM command state completing the menu sequence.
                 259     ;
020 08393        260     ds2432_menu:            CALL            send_ds2432_menu        ;Menu and command selection
W: value out of range: 0x293, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x93.
021 0831F        261                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
                 262     ;
022 08333        263     ds2432_prompt:          CALL            menu_prompt             ;prompt for user input
023 00048        264                             load         s0, #_character_h       ;load for commands and execute as required
024 09120        265                             JUMP            z, ds2432_menu
025 00031        266                             load         s0, #character_1
026 0910C        267                             JUMP            z, master_reset_regular ;repeat reset as before
027 00032        268                             load         s0, #character_2
028 09166        269                             JUMP            z, read_memory_command
029 00033        270                             load         s0, #character_3
02A 09181        271                             JUMP            z, write_scratchpad_command
02B 00034        272                             load         s0, #character_4
02C 091D4        273                             JUMP            z, read_scratchpad_command
02D 00035        274                             load         s0, #character_5
02E 091C3        275                             JUMP            z, write_byte_command
02F 00036        276                             load         s0, #character_6
030 091CC        277                             JUMP            z, read_byte_command
031 08339        278                             CALL            no_valid_input
032 08122        279                             JUMP            ds2432_prompt           ;Try again!
                 280     ;
                 281     ;
                 282     ;
                 283     ;
                 284     ;
                 285     ;**************************************************************************************
                 286     ; Prompt and selection tasks used in menus.
                 287     ;**************************************************************************************
                 288     ;
                 289     ; Prompts for input with > character and waits for key stroke which is
                 290     ; returned in upper case in register s0
                 291     ;
033 0831F        292     menu_prompt:            CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
034 0831F        293                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
035 00F3E        294                             LOAD            uart_EQU, #character_greater_than ;prompt for input
036 083B8        295                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
037 08314        296                             CALL            read_upper_case
W: value out of range: 0x214, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x14.
038 08080        297                             RETURN
                 298     ;
039 0831F        299     no_valid_input:         CALL            send_cr                 ;no valid command input
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
03A 00F3F        300                             LOAD            uart_EQU, #character_question ;display ???
03B 083B8        301                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
03C 083B8        302                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
03D 083B8        303                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
03E 08080        304                             RETURN
                 305     ;
                 306     ;
                 307     ;**************************************************************************************
                 308     ; DS2432 Read ROM Command.
                 309     ;**************************************************************************************
                 310     ;
                 311     ; The read ROM command (33 hex) allows the 8-bit family code, 48-bit unique serial
                 312     ; number and 8-bit CRC to be read from the DS2432 device.
                 313     ;
                 314     ; This routine reads the values and places them in KCPSM3 scratch pad memory
                 315     ; locations for future reference. These locations should be defined with constants
                 316     ; as follows and MUST be in consecutive ascending locations.
                 317     ;
                 318     ;  family_code
                 319     ;     Location to load family code which should be 33 hex
                 320     ;  serial_number0 to serial_number5
                 321     ;     6 bytes to hold 48-bit serial number (LS-byte first).
                 322     ;  read_ROM_CRC
                 323     ;     8-bit CRC value for the above EQU.
                 324     ;
                 325     ;
                 326     ; The routine also displays the values read and performs a verification of the
                 327     ; 8-bit CRC displaying a 'pass' or 'fail' message as appropriate.
                 328     ;
03F 00333        329     read_rom_command:       LOAD            s3, #0x33               ;Read ROM Command
040 08361        330                             CALL            write_byte_slow         ;transmit command
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
041 00500        331                             LOAD            s5, #family_code        ;memory pointer
042 08382        332     read_rom_loop:          CALL            read_byte_slow          ;read response into s3
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
043 00305        333                             load           s3, #s5                 ;load value
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
044 00507        334                             load         s5, #read_rom_crc       ;8-bytes to read
045 09148        335                             JUMP            z, display_rom
046 04501        336                             ADD             s5, #0x01
047 08142        337                             JUMP            read_rom_loop
048 0831F        338     display_rom:            CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
049 08386        339                             CALL            send_code               ;'code=' to display family code
W: value out of range: 0x386, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x86.
04A 0C000        340                             load           s0, family_code
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
04B 083EE        341                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
04C 0831F        342                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
04D 0838F        343                             CALL            send_serial             ;'serial=' to display family code
W: value out of range: 0x38f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x8f.
04E 00506        344                             LOAD            s5, #serial_number5     ;memory pointer starting MS-byte first
04F 0C050        345     disp_serial_loop:       load           s0, s5
050 083EE        346                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
051 00501        347                             load         s5, #serial_number0
052 09155        348                             JUMP            z, end_serial
053 06501        349                             SUB             s5, #0x01
054 0814F        350                             JUMP            disp_serial_loop
055 0831F        351     end_serial:             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
056 0839C        352                             CALL            send_crc                ;'CRC=' to display CRC value
W: value out of range: 0x39c, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9c.
057 0C070        353                             load           s0, read_rom_crc
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
058 083EE        354                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
059 0831F        355                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
05A 08312        356                             CALL            compute_crc8            ;compute CRC value in s0
W: value out of range: 0x112, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x12.
05B 0C170        357                             load           s1, read_rom_crc        ;load with received value
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
05C 0C010        358                             load         s0, s1
05D 09560        359                             JUMP            nz, crc8_fail
05E 08345        360                             CALL            send_pass
W: value out of range: 0x345, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x45.
05F 08120        361                             JUMP            ds2432_menu             ;now in memory and SHA-1 functions level
060 0834D        362     crc8_fail:              CALL            send_fail
W: value out of range: 0x34d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x4d.
061 08113        363                             JUMP            rom_menu                ;can not proceed to next level
                 364     ;
                 365     ;
                 366     ;
                 367     ;**************************************************************************************
                 368     ; DS2432 Skip ROM Command.
                 369     ;**************************************************************************************
                 370     ;
                 371     ; The skip ROM command (CC hex) is a short cut to the memory commands and SHA-1
                 372     ; functions which means that the 64 bit ROM contents do not have to be read.
                 373     ;
                 374     ;
062 003CC        375     skip_rom_command:       LOAD            s3, #0xcc               ;Skip ROM Command
063 08361        376                             CALL            write_byte_slow         ;transmit command
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
064 083C9        377                             CALL            send_ok
W: value out of range: 0x2c9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xc9.
065 08120        378                             JUMP            ds2432_menu
                 379     ;
                 380     ;
                 381     ;
                 382     ;**************************************************************************************
                 383     ; DS2432 Read Memory Command.
                 384     ;**************************************************************************************
                 385     ;
                 386     ; The read memory command (F0 hex) allows the entire memory contents to be read
                 387     ; except for the secret. This routine displays the address followed by 8 bytes
                 388     ; of EQU on each line until the address 0097 is reached.
                 389     ;
                 390     ; The initial 'F0' command must be followed by the 16-bit start address transmitted
                 391     ; LS-byte first. Then reads must continue until address 0097 has been read for the
                 392     ; command to complete naturally (otherwise a master reset is required).
                 393     ;
                 394     ;
                 395     ;
066 003F0        396     read_memory_command:    LOAD            s3, #0xf0               ;read memory Command
067 08361        397                             CALL            write_byte_slow         ;transmit command
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
068 00500        398                             LOAD            s5, #0x00               ;initial address in [s5,s4]=0000
069 00400        399                             LOAD            s4, #0x00
06A 0C340        400                             LOAD            s3, s4                  ;transmit address
06B 08361        401                             CALL            write_byte_slow
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
06C 0C350        402                             LOAD            s3, s5
06D 08361        403                             CALL            write_byte_slow
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
06E 0831F        404     rmc_line_loop:          CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
06F 0C050        405                             LOAD            s0, s5                  ;display 16-bit address
070 083EE        406                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
071 0C040        407                             LOAD            s0, s4
072 083EE        408                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
073 08322        409                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
074 08322        410                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
075 08322        411     rmc_EQU_loop:          CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
076 08382        412                             CALL            read_byte_slow          ;read EQU into s3
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
077 0C030        413                             LOAD            s0, s3                  ;display byte
078 083EE        414                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
079 04401        415                             ADD             s4, #0x01               ;increment address
07A 05500        416                             ADDCY           s5, #0x00
07B 00407        417                             load            s4, #0x07               ;load for 8-byte boundary
07C 09575        418                             JUMP            nz, rmc_EQU_loop
07D 00498        419                             load         s4, #0x98               ;load for last address
07E 0956E        420                             JUMP            nz, rmc_line_loop
07F 083C9        421                             CALL            send_ok
W: value out of range: 0x2c9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xc9.
080 08103        422                             JUMP            reset_menu              ;needs master reset next
                 423     ;
                 424     ;
                 425     ;**************************************************************************************
                 426     ; DS2432 Write Scratchpad Memory Command.
                 427     ;**************************************************************************************
                 428     ;
                 429     ; The write scratchpad memory command (0F hex) allows 8-bytes of EQU to be written
                 430     ; together with a target address for final storage in the main memory map.
                 431     ;
                 432     ; The DS2432 provides an initial confirmation of the write by returning a 16-bit CRC
                 433     ; value which KCPSM3 loads. The CRC is computed based on the command, address and
                 434     ; EQU transmitted (11 bytes). To achieve this, all bytes transmitted to the DS2432
                 435     ; are recorded in KCPSM3 scratch pad memory in ascending locations starting at
                 436     ; the location defined by constant 'command_start'.
                 437     ;
                 438     ; This routine prompts the user to enter the 16-bit target address is to be loaded
                 439     ; into the target address registers TA2 and TA1 in the DS2432 device. Note that only
                 440     ; address values below 0090 hex are valid. If the address is too high, then the
                 441     ; DS2432 aborts the command and this routine will too.
                 442     ;
                 443     ; Also note that the address will be forced internally to the DS2432 to match an
                 444     ; 8-byte boundary address in which the least significant 3-bits are reset to '000'
                 445     ; regardless of the address provided. The CRC still reflects the transmitted address.
                 446     ;
                 447     ; Aloader providing a valid address, the routine then prompts the user to enter
                 448     ; 8 bytes of EQU which are written to the DS2432.
                 449     ;
                 450     ;
                 451     ;
081 00E08        452     write_scratchpad_command: LOAD          se, #command_start      ;pointer to memory
082 0030F        453                             LOAD            s3, #0x0f               ;write scratchpad memory Command
083 0030E        454                             load           s3, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
084 04E01        455                             ADD             se, #0x01               ;increment pointer
085 08361        456                             CALL            write_byte_slow         ;transmit command
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
086 08364        457     wsc_addr_loop:          CALL            send_address            ;obtain 16-bit address 0000 to FFFF in [s5,s4]
W: value out of range: 0x364, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x64.
087 08319        458                             CALL            obtain_8bits
W: value out of range: 0x219, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x19.
088 09986        459                             JUMP            c, wsc_addr_loop        ;bad input address
089 0C500        460                             LOAD            s5, s0
08A 08319        461                             CALL            obtain_8bits
W: value out of range: 0x219, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x19.
08B 09986        462                             JUMP            c, wsc_addr_loop        ;bad input address
08C 0C400        463                             LOAD            s4, s0
08D 0C340        464                             LOAD            s3, s4                  ;transmit target address TA1 (LS-Byte)
08E 0030E        465                             load           s3, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
08F 04E01        466                             ADD             se, #0x01               ;increment pointer
090 08361        467                             CALL            write_byte_slow
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
091 0C350        468                             LOAD            s3, s5                  ;transmit target address TA2 (MS-Byte)
092 0030E        469                             load           s3, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
093 04E01        470                             ADD             se, #0x01               ;increment pointer
094 08361        471                             CALL            write_byte_slow
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
095 00500        472                             load         s5, #0x00               ;check address less than 0090 hex
096 095C2        473                             JUMP            nz, end_write_scratchpad ;DS2432 aborts command and so
097 00490        474                             load         s4, #0x90               ;no need to read EQU bytes.
098 09DC2        475                             JUMP            nc, end_write_scratchpad
099 00400        476                             LOAD            s4, #0x00               ;initialise byte counter
09A 08374        477     wsc_EQU_loop:          CALL            send_EQU               ;obtain a byte of EQU
W: value out of range: 0x374, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x74.
09B 0CF40        478                             LOAD            uart_EQU, s4           ;display which byte requested
09C 04F30        479                             ADD             uart_EQU, #character_0 ;convert to ASCII
09D 083B8        480                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
09E 08371        481                             CALL            send_equals
W: value out of range: 0x371, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x71.
09F 08319        482                             CALL            obtain_8bits
W: value out of range: 0x219, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x19.
0A0 0999A        483                             JUMP            c, wsc_EQU_loop        ;bad input EQU
0A1 0C300        484                             LOAD            s3, s0                  ;transmit byte
0A2 0030E        485                             load           s3, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0A3 04E01        486                             ADD             se, #0x01               ;increment pointer
0A4 08361        487                             CALL            write_byte_slow
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
0A5 04401        488                             ADD             s4, #0x01               ;count bytes
0A6 00408        489                             load         s4, #0x08
0A7 0959A        490                             JUMP            nz, wsc_EQU_loop
0A8 08382        491                             CALL            read_byte_slow          ;read back the 16-bit CRC into [s5,s4]
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0A9 0C430        492                             LOAD            s4, s3
0AA 08382        493                             CALL            read_byte_slow
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0AB 0C530        494                             LOAD            s5, s3
0AC 0040E        495                             load           s4, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0AD 04E01        496                             ADD             se, #0x01               ;increment pointer
0AE 0050E        497                             load           s5, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0AF 0831F        498                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0B0 0839C        499                             CALL            send_crc                ;'CRC=' to display CRC value
W: value out of range: 0x39c, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9c.
0B1 0C050        500                             LOAD            s0, s5
0B2 083EE        501                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0B3 0C040        502                             LOAD            s0, s4
0B4 083EE        503                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0B5 0831F        504                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0B6 0020B        505                             LOAD            s2, #0x0b               ;11 (0B hex) bytes transmitted in this command
0B7 0832C        506                             CALL            compute_crc16           ;compute CRC value in [s1,s0]
W: value out of range: 0x12c, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x2c.
0B8 0C5E0        507                             load           s5, se                 ;load with received value
0B9 06E01        508                             SUB             se, #0x01
0BA 0C4E0        509                             load           s4, se                 ;load with received value
0BB 0C510        510                             load         s5, s1
0BC 095C1        511                             JUMP            nz, wsc_crc16_fail
0BD 0C400        512                             load         s4, s0
0BE 095C1        513                             JUMP            nz, wsc_crc16_fail
0BF 08345        514                             CALL            send_pass
W: value out of range: 0x345, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x45.
0C0 08103        515                             JUMP            reset_menu              ;needs master reset next
0C1 0834D        516     wsc_crc16_fail:         CALL            send_fail
W: value out of range: 0x34d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x4d.
0C2 08103        517     end_write_scratchpad:   JUMP            reset_menu              ;needs master reset next
                 518     ;
                 519     ;
                 520     ;
                 521     ;**************************************************************************************
                 522     ; Write Byte Command.
                 523     ;**************************************************************************************
                 524     ;
                 525     ; This routine simply allows you to specify any byte and write it to the DS2432 device.
                 526     ; Apart from checking that the value is in the range 00 to FF hex, there is no checking
                 527     ; of the meaning of the value to the DS2432 device and all attempts to track the
                 528     ; state machine will be lost.
                 529     ;
                 530     ;
0C3 0831F        531     write_byte_command:     CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0C4 0831F        532                             CALL            send_byte               ;obtain a byte of EQU
W: value out of range: 0x31f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0C5 08371        533                             CALL            send_equals
W: value out of range: 0x371, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x71.
0C6 08319        534                             CALL            obtain_8bits
W: value out of range: 0x219, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x19.
0C7 099C3        535                             JUMP            c, write_byte_command   ;bad input EQU
0C8 0C300        536                             LOAD            s3, s0                  ;transmit byte
0C9 08361        537                             CALL            write_byte_slow         ;transmit byte
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
0CA 083C9        538                             CALL            send_ok
W: value out of range: 0x2c9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xc9.
0CB 08120        539                             JUMP            ds2432_menu             ;remain in memory and function menu
                 540     ;
                 541     ;
                 542     ;
                 543     ;**************************************************************************************
                 544     ; Read Byte Command.
                 545     ;**************************************************************************************
                 546     ;
                 547     ; This routine will attempt to read a single byte from the DS2432 device.
                 548     ; The results will be displayed on the terminal. There is no checking of the meaning
                 549     ; of the value received from the DS2432 device and all attempts to track the
                 550     ; state machine will be lost.
                 551     ;
                 552     ;
0CC 0831F        553     read_byte_command:      CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0CD 0831F        554                             CALL            send_byte               ;obtain a byte of EQU
W: value out of range: 0x31f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0CE 08371        555                             CALL            send_equals
W: value out of range: 0x371, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x71.
0CF 08382        556                             CALL            read_byte_slow          ;receive byte
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0D0 0C030        557                             LOAD            s0, s3                  ;display value
0D1 083EE        558                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0D2 083C9        559                             CALL            send_ok
W: value out of range: 0x2c9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xc9.
0D3 08120        560                             JUMP            ds2432_menu             ;remain in memory and function menu
                 561     ;
                 562     ;
                 563     ;
                 564     ;
                 565     ;**************************************************************************************
                 566     ; DS2432 Read Scratchpad Memory Command.
                 567     ;**************************************************************************************
                 568     ;
                 569     ; The read scratchpad memory command (AA hex) allows the 8-bytes of EQU previously
                 570     ; to be written into the scratchpad memory to be read back for verification together with
                 571     ; the target address, a transfer status register and a 16-bit CRC value.
                 572     ;
                 573     ; The 16-bit CRC is formed of the command byte, address TA1 and TA2, E/S byte and 8 EQU
                 574     ; bytes as transmitted (12 bytes). These may not be the same as the values provided
                 575     ; during a previous write to scratchpad memory. All these bytes are recorded in KCPSM3
                 576     ; scratch pad memory in ascending locations starting at the location defined by
                 577     ; constant 'command_start'.
                 578     ;
                 579     ;
0D4 00E08        580     read_scratchpad_command: LOAD           se, #command_start      ;pointer to memory
0D5 003AA        581                             LOAD            s3, #0xaa               ;read scratchpad memory Command
0D6 0030E        582                             load           s3, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0D7 04E01        583                             ADD             se, #0x01               ;increment pointer
0D8 08361        584                             CALL            write_byte_slow         ;transmit command
W: value out of range: 0x161, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x61.
0D9 08364        585                             CALL            send_address            ;display 'Address='
W: value out of range: 0x364, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x64.
0DA 08382        586                             CALL            read_byte_slow          ;read address into [s5,s4]
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0DB 0C430        587                             LOAD            s4, s3
0DC 08382        588                             CALL            read_byte_slow
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0DD 0C530        589                             LOAD            s5, s3
0DE 0040E        590                             load           s4, #se                 ;record sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0DF 04E01        591                             ADD             se, #0x01               ;increment pointer
0E0 0050E        592                             load           s5, #se                 ;record sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0E1 04E01        593                             ADD             se, #0x01               ;increment pointer
0E2 0C050        594                             LOAD            s0, s5                  ;display address
0E3 083EE        595                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0E4 0C040        596                             LOAD            s0, s4
0E5 083EE        597                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0E6 0837E        598                             CALL            send_es                 ;display 'E/S='
W: value out of range: 0x37e, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x7e.
0E7 08382        599                             CALL            read_byte_slow          ;read E/S register
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0E8 0030E        600                             load           s3, #se                 ;record sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0E9 04E01        601                             ADD             se, #0x01               ;increment pointer
0EA 0C030        602                             LOAD            s0, s3                  ;display value
0EB 083EE        603                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0EC 08374        604                             CALL            send_EQU               ;display 'EQU='
W: value out of range: 0x374, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x74.
0ED 08371        605                             CALL            send_equals
W: value out of range: 0x371, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x71.
0EE 00408        606                             LOAD            s4, #0x08               ;8 bytes to read
0EF 08322        607     rsc_loop:               CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
0F0 08382        608                             CALL            read_byte_slow          ;read EQU byte
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0F1 0030E        609                             load           s3, #se                 ;record sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0F2 04E01        610                             ADD             se, #0x01               ;increment pointer
0F3 0C030        611                             LOAD            s0, s3                  ;display value
0F4 083EE        612                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
0F5 06401        613                             SUB             s4, #0x01               ;count bytes
0F6 095EF        614                             JUMP            nz, rsc_loop
0F7 08382        615                             CALL            read_byte_slow          ;read 16-bit CRC into [s5,s4]
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0F8 0C430        616                             LOAD            s4, s3
0F9 08382        617                             CALL            read_byte_slow
W: value out of range: 0x182, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x82.
0FA 0C530        618                             LOAD            s5, s3
0FB 0040E        619                             load           s4, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0FC 04E01        620                             ADD             se, #0x01               ;increment pointer
0FD 0050E        621                             load           s5, #se                 ;record command sequence
W: instruction `LOAD sX, kk' requires operand #2 to be of type(s): number, or expression; while the given operand is of type: register.
0FE 0831F        622                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
0FF 0839C        623                             CALL            send_crc                ;'CRC=' to display CRC value
W: value out of range: 0x39c, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9c.
100 0C050        624                             LOAD            s0, s5
E: attempting to use unavailable space in program memory at address: 0x100.
101 083EE        625                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
E: attempting to use unavailable space in program memory at address: 0x101.
102 0C040        626                             LOAD            s0, s4
E: attempting to use unavailable space in program memory at address: 0x102.
103 083EE        627                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
E: attempting to use unavailable space in program memory at address: 0x103.
104 0831F        628                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x104.
105 0020C        629                             LOAD            s2, #0x0c               ;12 (0C hex) bytes in this command
E: attempting to use unavailable space in program memory at address: 0x105.
106 0832C        630                             CALL            compute_crc16           ;compute CRC value in [s1,s0]
W: value out of range: 0x12c, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x2c.
E: attempting to use unavailable space in program memory at address: 0x106.
107 0C5E0        631                             load           s5, se                 ;load with received value
E: attempting to use unavailable space in program memory at address: 0x107.
108 06E01        632                             SUB             se, #0x01
E: attempting to use unavailable space in program memory at address: 0x108.
109 0C4E0        633                             load           s4, se                 ;load with received value
E: attempting to use unavailable space in program memory at address: 0x109.
10A 0C510        634                             load         s5, s1
E: attempting to use unavailable space in program memory at address: 0x10a.
10B 09510        635                             JUMP            nz, rsc_crc16_fail
W: value out of range: 0x110, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x10.
E: attempting to use unavailable space in program memory at address: 0x10b.
10C 0C400        636                             load         s4, s0
E: attempting to use unavailable space in program memory at address: 0x10c.
10D 09510        637                             JUMP            nz, rsc_crc16_fail
W: value out of range: 0x110, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x10.
E: attempting to use unavailable space in program memory at address: 0x10d.
10E 08345        638                             CALL            send_pass
W: value out of range: 0x345, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x45.
E: attempting to use unavailable space in program memory at address: 0x10e.
10F 08103        639                             JUMP            reset_menu              ;needs master reset next
E: attempting to use unavailable space in program memory at address: 0x10f.
110 0834D        640     rsc_crc16_fail:         CALL            send_fail
W: value out of range: 0x34d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x4d.
E: attempting to use unavailable space in program memory at address: 0x110.
111 08103        641                             JUMP            reset_menu              ;needs master reset next
E: attempting to use unavailable space in program memory at address: 0x111.
                 642     ;
                 643     ;
                 644     ;
                 645     ;**************************************************************************************
                 646     ; Compute 8-bit CRC used by DS2432.
                 647     ;**************************************************************************************
                 648     ;
                 649     ; The DS2432 computes an 8-bit CRC using the polynomial X8 + X5 + X4 + 1.
                 650     ; See the DS2432 EQU sheet for full details.
                 651     ;
                 652     ; load input value of value 00 00 00 01 B8 1C 02
                 653     ; should produce CRC=A2.
                 654     ;
                 655     ; This routine computes the same CRC based on the values loadd in the KCPSM3
                 656     ; scratch pad memory by the read ROM command. The result is returned in register s0.
                 657     ;
                 658     ; Registers used s0,s1,s2,s3,s4,s5,s6,s7,s8,s9
                 659     ;
                 660     ;
                 661     ;Start by loading family code and serial number (56-bits) into
                 662     ;register set [s9,s8,s7,s6,s5,s4,s3] so they can be shiloaded out
                 663     ;LSB first.
                 664     ;
112 0C300        665     compute_crc8:           load           s3, family_code
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x112.
113 0C410        666                             load           s4, serial_number0
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x113.
114 0C520        667                             load           s5, serial_number1
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x114.
115 0C630        668                             load           s6, serial_number2
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x115.
116 0C740        669                             load           s7, serial_number3
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x116.
117 0C850        670                             load           s8, serial_number4
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x117.
118 0C960        671                             load           s9, serial_number5
W: instruction `LOAD sX, sY' requires operand #2 to be of type(s): register; while the given operand is of type: number.
E: attempting to use unavailable space in program memory at address: 0x118.
119 00238        672                             LOAD            s2, #0x38               ;56 bits to shiload (38 hex)
E: attempting to use unavailable space in program memory at address: 0x119.
11A 00000        673                             LOAD            s0, #0x00               ;clear CRC value
E: attempting to use unavailable space in program memory at address: 0x11a.
11B 0C100        674     crc8_loop:              LOAD            s1, s0                  ;copy current CRC value
E: attempting to use unavailable space in program memory at address: 0x11b.
11C 0C133        675                             XOR             s1, s3                  ;Need to know LSB XOR next input bit
E: attempting to use unavailable space in program memory at address: 0x11c.
11D 00101        676                             load            s1, #0x01               ;load result of XOR in LSB
E: attempting to use unavailable space in program memory at address: 0x11d.
11E 09D20        677                             JUMP            nc, crc8_shiload
W: value out of range: 0x120, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x20.
E: attempting to use unavailable space in program memory at address: 0x11e.
11F 03018        678                             XOR             s0, #0x18               ;compliment bits 3 and 4 of CRC
E: attempting to use unavailable space in program memory at address: 0x11f.
120 0D10E        679     crc8_shiload:             SR0             s1                      ;Carry gets LSB XOR next input bit
E: attempting to use unavailable space in program memory at address: 0x120.
121 0D008        680                             SRA             s0                      ;shiload Carry into MSB to form new CRC value
E: attempting to use unavailable space in program memory at address: 0x121.
122 0D90E        681                             SR0             s9                      ;shiload input value
E: attempting to use unavailable space in program memory at address: 0x122.
123 0D808        682                             SRA             s8
E: attempting to use unavailable space in program memory at address: 0x123.
124 0D708        683                             SRA             s7
E: attempting to use unavailable space in program memory at address: 0x124.
125 0D608        684                             SRA             s6
E: attempting to use unavailable space in program memory at address: 0x125.
126 0D508        685                             SRA             s5
E: attempting to use unavailable space in program memory at address: 0x126.
127 0D408        686                             SRA             s4
E: attempting to use unavailable space in program memory at address: 0x127.
128 0D308        687                             SRA             s3
E: attempting to use unavailable space in program memory at address: 0x128.
129 06201        688                             SUB             s2, #0x01               ;count iterations
E: attempting to use unavailable space in program memory at address: 0x129.
12A 0951B        689                             JUMP            nz, crc8_loop
W: value out of range: 0x11b, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1b.
E: attempting to use unavailable space in program memory at address: 0x12a.
12B 08080        690                             RETURN
E: attempting to use unavailable space in program memory at address: 0x12b.
                 691     ;
                 692     ;
                 693     ;
                 694     ;**************************************************************************************
                 695     ; Compute 16-bit CRC used by DS2432.
                 696     ;**************************************************************************************
                 697     ;
                 698     ; The DS2432 computes a 16-bit CRC using the polynomial X16 + X15 + X2 + 1.
                 699     ; See the DS2432 EQU sheet for full details.
                 700     ;
                 701     ; Note that the value formed in the CRC shiload register is inverted to give the
                 702     ; same value as that sent from the DS2432 during scratchpad write, scratchpad read
                 703     ; and read auth page commands.
                 704     ;
                 705     ; This routine computes the CRC based on the values loadd in the KCPSM3
                 706     ; scratch pad memory starting at address defined by constant 'command_start'.
                 707     ; register 's2' must specify how many bytes are to be used in the calculation
                 708     ; and the CRC is returned in register pair [s1,s0] once it has been inverted.
                 709     ;
                 710     ; Registers used s0,s1,s2,s3,s4,s5,s6
                 711     ;
                 712     ;
                 713     ;Start by loading family code and serial number (56-bits) into
                 714     ;register set [s9,s8,s7,s6,s5,s4,s3] so they can be shiloaded out
                 715     ;LSB first.
                 716     ;
12C 00508        717     compute_crc16:          LOAD            s5, #command_start      ;memory pointer
E: attempting to use unavailable space in program memory at address: 0x12c.
12D 00000        718                             LOAD            s0, #0x00               ;clear CRC value
E: attempting to use unavailable space in program memory at address: 0x12d.
12E 00100        719                             LOAD            s1, #0x00
E: attempting to use unavailable space in program memory at address: 0x12e.
12F 0C450        720     crc16_byte_loop:        load           s4, s5                 ;read input byte
E: attempting to use unavailable space in program memory at address: 0x12f.
130 00308        721                             LOAD            s3, #0x08               ;8-bits to shiload
E: attempting to use unavailable space in program memory at address: 0x130.
131 0C600        722     crc16_bit_loop:         LOAD            s6, s0                  ;copy current CRC value
E: attempting to use unavailable space in program memory at address: 0x131.
132 0C643        723                             XOR             s6, s4                  ;Need to know LSB XOR next input bit
E: attempting to use unavailable space in program memory at address: 0x132.
133 00601        724                             load            s6, #0x01               ;load result of XOR in LSB
E: attempting to use unavailable space in program memory at address: 0x133.
134 09D37        725                             JUMP            nc, crc16_shiload
W: value out of range: 0x137, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x37.
E: attempting to use unavailable space in program memory at address: 0x134.
135 03002        726                             XOR             s0, #0x02               ;compliment bit 1 of CRC
E: attempting to use unavailable space in program memory at address: 0x135.
136 03140        727                             XOR             s1, #0x40               ;compliment bit 14 of CRC
E: attempting to use unavailable space in program memory at address: 0x136.
137 0D60E        728     crc16_shiload:            SR0             s6                      ;Carry gets LSB XOR next input bit
E: attempting to use unavailable space in program memory at address: 0x137.
138 0D108        729                             SRA             s1                      ;shiload Carry into MSB to form new CRC value
E: attempting to use unavailable space in program memory at address: 0x138.
139 0D008        730                             SRA             s0
E: attempting to use unavailable space in program memory at address: 0x139.
13A 0D40E        731                             SR0             s4                      ;shiload input value
E: attempting to use unavailable space in program memory at address: 0x13a.
13B 06301        732                             SUB             s3, #0x01               ;count bits
E: attempting to use unavailable space in program memory at address: 0x13b.
13C 09531        733                             JUMP            nz, crc16_bit_loop      ;next bit
W: value out of range: 0x131, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x31.
E: attempting to use unavailable space in program memory at address: 0x13c.
13D 04501        734                             ADD             s5, #0x01               ;increment memory pointer
E: attempting to use unavailable space in program memory at address: 0x13d.
13E 06201        735                             SUB             s2, #0x01               ;count bytes
E: attempting to use unavailable space in program memory at address: 0x13e.
13F 0952F        736                             JUMP            nz, crc16_byte_loop     ;next byte
W: value out of range: 0x12f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x2f.
E: attempting to use unavailable space in program memory at address: 0x13f.
140 030FF        737                             XOR             s0, #0xff               ;1's complement of CRC value
E: attempting to use unavailable space in program memory at address: 0x140.
141 031FF        738                             XOR             s1, #0xff
E: attempting to use unavailable space in program memory at address: 0x141.
142 08080        739                             RETURN
E: attempting to use unavailable space in program memory at address: 0x142.
                 740     ;
                 741     ;
                 742     ;**************************************************************************************
                 743     ; Initialise the DS2432 1-wire interface.
                 744     ;**************************************************************************************
                 745     ;
                 746     ; The 1-wire interface is an open-collector communication scheme employing an external
                 747     ; pull-up resistor of 680 Ohms.
                 748     ;
                 749     ; The hardware section of this translates the one bit signal from PicoBlaze such that
                 750     ; when this signal is Low the output is driven Low, but when it is High, it turns off
                 751     ; the output buffer and the signal is pulled High externally.
                 752     ;
                 753     ; This initialisation routine simply ensures that the line is High aloader configuration.
                 754     ; It is vital that DS_wire is generally in the High state because it is the only way in
                 755     ; which the DS2432 device derives power to operate.
                 756     ;
                 757     ; Registers used s0
                 758     ;
143 00001        759     ds_wire_init:           LOAD            s0, #ds_wire
E: attempting to use unavailable space in program memory at address: 0x143.
144 0E008        760                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x144.
145 08080        761                             RETURN
E: attempting to use unavailable space in program memory at address: 0x145.
                 762     ;
                 763     ;
                 764     ;**************************************************************************************
                 765     ; DS2432 initialisation - Regular Speed.
                 766     ;**************************************************************************************
                 767     ;
                 768     ; The initialisation sequence must be performed before any communication can be
                 769     ; made with the DS2432 device. This involves the application of an active Low master
                 770     ; reset pulse.
                 771     ;
                 772     ; The regular (slow) speed communication is established by transmitting an active
                 773     ; Low reset pulse for a duration of at least 480us. This design generates a 500us pulse.
                 774     ;
                 775     ; The DS2432 acknowledges the reset and the setting of regular mode by generating an
                 776     ; active Low 'Rx Presence Pulse'. This presence pulse can start 15 to 60us aloader the
                 777     ; reset pulse and will end between 120 and 300us aloader the reset pulse.
                 778     ;
                 779     ; To confirm that regular mode has been set, this routine confirms that the presence pulse
                 780     ; is active only aloader 60us have elapsed since the reset pulse. This ensures that the
                 781     ; faster presence pulse of overdrive mode can not be detected.
                 782     ;
                 783     ; The carry flag will be set if no valid presence pulse was received (wire remained High) and
                 784     ; can be used to indicate an initialisation failure or success.
                 785     ;
                 786     ; The routine only completes 300us aloader the presence pulse to ensure the DS2432 has
                 787     ; completed the presence pulse and is ready for the first operation.
                 788     ;
                 789     ; Registers used s0,s1,s2
                 790     ;
146 00000        791     ds_init_regular_mode:   LOAD            s0, #0x00               ;transmit reset pulse
E: attempting to use unavailable space in program memory at address: 0x146.
147 0E008        792                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x147.
                 793     ;Delay of 500us is equivalent to 12500 instructions at 50MHz.
                 794     ;This delay loop is formed of 28 instructions requiring 446 repetitions.
148 00201        795                             LOAD            s2, #0x01               ;[s3,s2]=445 decimal (01BD hex)
E: attempting to use unavailable space in program memory at address: 0x148.
149 001BD        796                             LOAD            s1, #0xbd
E: attempting to use unavailable space in program memory at address: 0x149.
14A 0839A        797     rm_wait_500us:          CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x14a.
14B 06101        798                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x14b.
14C 07200        799                             SUBCY           s2, #0x00
E: attempting to use unavailable space in program memory at address: 0x14c.
14D 09D4A        800                             JUMP            nc, rm_wait_500us       ;repeat until -1
W: value out of range: 0x14a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x4a.
E: attempting to use unavailable space in program memory at address: 0x14d.
14E 00001        801                             LOAD            s0, #0x01               ;end of regular reset pulse
E: attempting to use unavailable space in program memory at address: 0x14e.
14F 0E008        802                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x14f.
                 803     ;Delay of 60us is equivalent to 1500 instructions at 50MHz.
                 804     ;This delay and is formed of 27 instructions requiring 56 repetitions.
150 00138        805                             LOAD            s1, #0x38               ;56 (38 hex)
E: attempting to use unavailable space in program memory at address: 0x150.
151 0839A        806     rm_wait_60us:           CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x151.
152 06101        807                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x152.
153 09551        808                             JUMP            nz, rm_wait_60us        ;repeat until zero
W: value out of range: 0x151, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x51.
E: attempting to use unavailable space in program memory at address: 0x153.
                 809     ;The DS_wire is now checked at approximately 1us intervals for the next 240us looking
                 810     ;to detect an active Low presence pulse. The 240us is equivalent to 6000 instructions
                 811     ;at 50MHz and this polling loop is formed of 33 instructions requiring 182 repetitions.
154 00201        812                             LOAD            s2, #0x01               ;set bit which will be reset by a presence pulse
E: attempting to use unavailable space in program memory at address: 0x154.
155 001B6        813                             LOAD            s1, #0xb6               ;182 (B6 hex)
E: attempting to use unavailable space in program memory at address: 0x155.
156 0839A        814     rm_poll_240us:          CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x156.
157 0835D        815                             CALL            read_ds_wire            ;read wire - 5 instructions including CALL
W: value out of range: 0x15d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x5d.
E: attempting to use unavailable space in program memory at address: 0x157.
158 0C201        816                             AND             s2, s0                  ;clear flag if DS_wire was Low
E: attempting to use unavailable space in program memory at address: 0x158.
159 06101        817                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x159.
15A 09556        818                             JUMP            nz, rm_poll_240us       ;repeat until zero
W: value out of range: 0x156, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x15a.
15B 00201        819                             load            s2, #0x01               ;set carry flag if no pulse detected
E: attempting to use unavailable space in program memory at address: 0x15b.
15C 08080        820                             RETURN
E: attempting to use unavailable space in program memory at address: 0x15c.
                 821     ;
                 822     ;
                 823     ;**************************************************************************************
                 824     ; Read the DS_wire
                 825     ;**************************************************************************************
                 826     ;
                 827     ; The DS_wire signal is read and returned in bit0 of register 's0'.
                 828     ; Additionally the carry flag is set if the signal is High and reset if Low
                 829     ;
                 830     ; Registers used s0
                 831     ;
15D 0A002        832     read_ds_wire:           INPUT           s0, ds_wire_in_port
E: attempting to use unavailable space in program memory at address: 0x15d.
15E 01001        833                             AND             s0, #ds_wire            ;ensure only bit0 is active
E: attempting to use unavailable space in program memory at address: 0x15e.
15F 00001        834                             load            s0, #ds_wire            ;set carry flag if DS_wire is High
E: attempting to use unavailable space in program memory at address: 0x15f.
160 08080        835                             RETURN
E: attempting to use unavailable space in program memory at address: 0x160.
                 836     ;
                 837     ;
                 838     ;
                 839     ;**************************************************************************************
                 840     ; Write a byte to DS2432 in regular speed mode.
                 841     ;**************************************************************************************
                 842     ;
                 843     ; Bytes are written to the DS2432 with LSB first.
                 844     ;
                 845     ; The byte to be written should be provided in register 's3' and this will be preserved.
                 846     ;
                 847     ; Registers used s0,s1,s2,s3
                 848     ;
161 00208        849     write_byte_slow:        LOAD            s2, #0x08               ;8 bits to transmit
E: attempting to use unavailable space in program memory at address: 0x161.
162 0D30C        850     wbs_loop:               RR              s3                      ;load next bit LSB first
E: attempting to use unavailable space in program memory at address: 0x162.
163 09966        851                             JUMP            c, wbs1                 ;transmit '0' or '1'
W: value out of range: 0x166, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x66.
E: attempting to use unavailable space in program memory at address: 0x163.
164 0836A        852                             CALL            write_low_slow
W: value out of range: 0x16a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x6a.
E: attempting to use unavailable space in program memory at address: 0x164.
165 08167        853                             JUMP            next_slow_bit
W: value out of range: 0x167, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x67.
E: attempting to use unavailable space in program memory at address: 0x165.
166 08375        854     wbs1:                   CALL            write_high_slow
W: value out of range: 0x175, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x75.
E: attempting to use unavailable space in program memory at address: 0x166.
167 06201        855     next_slow_bit:          SUB             s2, #0x01               ;count bits
E: attempting to use unavailable space in program memory at address: 0x167.
168 09562        856                             JUMP            nz, wbs_loop            ;repeat until 8-bits transmitted
W: value out of range: 0x162, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x62.
E: attempting to use unavailable space in program memory at address: 0x168.
169 08080        857                             RETURN
E: attempting to use unavailable space in program memory at address: 0x169.
                 858     ;
                 859     ;
                 860     ;
                 861     ;**************************************************************************************
                 862     ; Write a '0' to DS_wire in regular speed mode.
                 863     ;**************************************************************************************
                 864     ;
                 865     ; To write a '0' to the DS_wire the signal must be Low for 60 to 120us. This design
                 866     ; generates a 78us active Low pulse.
                 867     ;
                 868     ; The DS2432 then requires at least 1us of recovery time for which this routine
                 869     ; provides a 2us delay such that the entire write Low process (slot time) is 80us.
                 870     ; A recovery time of 1us was also found to be marginal in practice probably due
                 871     ; to the rise time of the DS_wire via the external pull up resistor.
                 872     ;
                 873     ; Registers used s0,s1
                 874     ;
16A 00000        875     write_low_slow:         LOAD            s0, #0x00               ;transmit Low pulse
E: attempting to use unavailable space in program memory at address: 0x16a.
16B 0E008        876                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x16b.
                 877     ;Delay of 78us is equivalent to 1950 instructions at 50MHz.
                 878     ;This delay loop is formed of 27 instructions requiring 72 repetitions.
16C 00148        879                             LOAD            s1, #0x48               ;72 (48 hex)
E: attempting to use unavailable space in program memory at address: 0x16c.
16D 0839A        880     wls_wait_78us:          CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x16d.
16E 06101        881                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x16e.
16F 0956D        882                             JUMP            nz, wls_wait_78us       ;repeat until zero
W: value out of range: 0x16d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x6d.
E: attempting to use unavailable space in program memory at address: 0x16f.
170 00001        883                             LOAD            s0, #0x01               ;end of Low pulse
E: attempting to use unavailable space in program memory at address: 0x170.
171 0E008        884                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x171.
172 0839A        885                             CALL            delay_1us               ;2us recovery time
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x172.
173 0839A        886                             CALL            delay_1us
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x173.
174 08080        887                             RETURN
E: attempting to use unavailable space in program memory at address: 0x174.
                 888     ;
                 889     ;
                 890     ;**************************************************************************************
                 891     ; Write a '1' to DS_wire in regular speed mode.
                 892     ;**************************************************************************************
                 893     ;
                 894     ; To write a '1' to the DS_wire the signal must be Low for 1 to 15us to instigate the
                 895     ; write of the EQU. This design generates an 8us active Low pulse for this purpose.
                 896     ;
                 897     ; Then the output must be High for 53 to 114us to provide the '1' for the DS2432 to
                 898     ; read and then provide recovery time. This design implements a 72us delay such that
                 899     ; the entire write High process (slot time) is 80us
                 900     ;
                 901     ; Registers used s0,s1
                 902     ;
175 00000        903     write_high_slow:        LOAD            s0, #0x00               ;transmit Low pulse
E: attempting to use unavailable space in program memory at address: 0x175.
176 0E008        904                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x176.
                 905     ;Delay of 8us is equivalent to 200 instructions at 50MHz.
                 906     ;This delay loop is formed of 27 instructions requiring 8 repetitions.
177 00108        907                             LOAD            s1, #0x08               ;8 (08 hex)
E: attempting to use unavailable space in program memory at address: 0x177.
178 0839A        908     whs_wait_8us:           CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x178.
179 06101        909                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x179.
17A 09578        910                             JUMP            nz, whs_wait_8us        ;repeat until zero
W: value out of range: 0x178, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x78.
E: attempting to use unavailable space in program memory at address: 0x17a.
17B 00001        911                             LOAD            s0, #0x01               ;end of Low pulse
E: attempting to use unavailable space in program memory at address: 0x17b.
17C 0E008        912                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x17c.
                 913     ;Delay of 72us is equivalent to 1800 instructions at 50MHz.
                 914     ;This delay loop is formed of 27 instructions requiring 67 repetitions.
17D 00143        915                             LOAD            s1, #0x43               ;67 (43 hex)
E: attempting to use unavailable space in program memory at address: 0x17d.
17E 0839A        916     whs_wait_72us:          CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x17e.
17F 06101        917                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x17f.
180 0957E        918                             JUMP            nz, whs_wait_72us       ;repeat until zero
W: value out of range: 0x17e, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x7e.
E: attempting to use unavailable space in program memory at address: 0x180.
181 08080        919                             RETURN
E: attempting to use unavailable space in program memory at address: 0x181.
                 920     ;
                 921     ;
                 922     ;
                 923     ;**************************************************************************************
                 924     ; Read a byte from DS2432 in regular speed mode.
                 925     ;**************************************************************************************
                 926     ;
                 927     ; Bytes are read from the DS2432 with LSB first.
                 928     ;
                 929     ; The byte read will be returned in register 's3'.
                 930     ;
                 931     ; Registers used s0,s1,s2,s3
                 932     ;
182 00208        933     read_byte_slow:         LOAD            s2, #0x08               ;8 bits to receive
E: attempting to use unavailable space in program memory at address: 0x182.
183 08387        934     rbs_loop:               CALL            read_bit_slow           ;read next bit LSB first
W: value out of range: 0x187, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x87.
E: attempting to use unavailable space in program memory at address: 0x183.
184 06201        935                             SUB             s2, #0x01               ;count bits
E: attempting to use unavailable space in program memory at address: 0x184.
185 09583        936                             JUMP            nz, rbs_loop            ;repeat until 8-bits received
W: value out of range: 0x183, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x83.
E: attempting to use unavailable space in program memory at address: 0x185.
186 08080        937                             RETURN
E: attempting to use unavailable space in program memory at address: 0x186.
                 938     ;
                 939     ;
                 940     ;
                 941     ;
                 942     ;**************************************************************************************
                 943     ; Read a EQU bit sent from the DS2432 in regular speed mode.
                 944     ;**************************************************************************************
                 945     ;
                 946     ; To read a bit, PicoBlaze must initiate the processed with an active Low pulse of
                 947     ; 1 to 15us. This design generates a 4us active Low pulse for this purpose.
                 948     ;
                 949     ; Then DS2432 responds to the Low pulse by diving DS_wire in two differet ways
                 950     ; depending on the logic level it is trying to send back.
                 951     ;
                 952     ; For a logic '0' the DS2432 will drive the DS-wire Low for up to 15us aloader
                 953     ; the start of the instigating pulse. Therefore PicoBlaze must read the DS-wire
                 954     ; before this time has elapsed but only aloader it has itself released the wire.
                 955     ;
                 956     ; For a logic '1' the DS2432 will do nothing and hence the DS-wire will be pulled
                 957     ; High by the external resistor aloader PicoBlaze has released the wire. PicoBlaze
                 958     ; will sample the wire and detect the High level.
                 959     ;
                 960     ; In this design, PicoBlaze needs to detect the logic state of the wire aloader
                 961     ; releasing the wire at 4us. Sampling the wire too quickly would not provide
                 962     ; adequate time for a High signal to be formed by the pull up resistor. However, it
                 963     ; must sample the wire before 15us have elapsed and any potential Low is removed.
                 964     ; This design samples the wire at 12us which is 8us aloader the initiation pulse ends.
                 965     ;
                 966     ; A further delay of 68us is then allowed for the DS2432 to stop transmitting and
                 967     ; to recover. This also mean that the entire read process (slot time) is 80us.
                 968     ;
                 969     ; The received EQU bit is SHIloadED into the MSB of register 's3'. In this way
                 970     ; the reception of 8-bits will shiload the first bit into the LSB position of 's3'.
                 971     ;
                 972     ; Registers used s0,s1,s3
                 973     ;
187 00000        974     read_bit_slow:          LOAD            s0, #0x00               ;transmit Low pulse
E: attempting to use unavailable space in program memory at address: 0x187.
188 0E008        975                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x188.
                 976     ;Delay of 4us is equivalent to 100 instructions at 50MHz.
                 977     ;This delay loop is formed of 27 instructions requiring 4 repetitions.
189 00104        978                             LOAD            s1, #0x04               ;4 (04 hex)
E: attempting to use unavailable space in program memory at address: 0x189.
18A 0839A        979     rbs_wait_4us:           CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x18a.
18B 06101        980                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x18b.
18C 0958A        981                             JUMP            nz, rbs_wait_4us        ;repeat until zero
W: value out of range: 0x18a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x8a.
E: attempting to use unavailable space in program memory at address: 0x18c.
18D 00001        982                             LOAD            s0, #0x01               ;end of Low pulse
E: attempting to use unavailable space in program memory at address: 0x18d.
18E 0E008        983                             OUTPUT          s0, ds_wire_out_port
E: attempting to use unavailable space in program memory at address: 0x18e.
                 984     ;Delay of 8us is equivalent to 200 instructions at 50MHz.
                 985     ;This delay loop is formed of 27 instructions requiring 8 repetitions.
18F 00108        986                             LOAD            s1, #0x08               ;8 (08 hex)
E: attempting to use unavailable space in program memory at address: 0x18f.
190 0839A        987     rbs_wait_8us:           CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x190.
191 06101        988                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x191.
192 09590        989                             JUMP            nz, rbs_wait_8us        ;repeat until zero
W: value out of range: 0x190, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x90.
E: attempting to use unavailable space in program memory at address: 0x192.
193 0835D        990                             CALL            read_ds_wire            ;sample wire (carry = state)
W: value out of range: 0x15d, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x5d.
E: attempting to use unavailable space in program memory at address: 0x193.
194 0D308        991                             SRA             s3                      ;shiload received bit into MSB of s3
E: attempting to use unavailable space in program memory at address: 0x194.
                 992     ;Delay of 68us is equivalent to 1700 instructions at 50MHz.
                 993     ;This delay loop is formed of 27 instructions requiring 63 repetitions.
195 0013F        994                             LOAD            s1, #0x3f               ;63 (3F hex)
E: attempting to use unavailable space in program memory at address: 0x195.
196 0839A        995     rbs_wait_68us:          CALL            delay_1us               ;25 instructions including CALL
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x196.
197 06101        996                             SUB             s1, #0x01               ;decrement delay counter
E: attempting to use unavailable space in program memory at address: 0x197.
198 09596        997                             JUMP            nz, rbs_wait_68us       ;repeat until zero
W: value out of range: 0x196, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x96.
E: attempting to use unavailable space in program memory at address: 0x198.
199 08080        998                             RETURN
E: attempting to use unavailable space in program memory at address: 0x199.
                 999     ;
                1000     ;
                1001     ;**************************************************************************************
                1002     ; Soloadware delay routines
                1003     ;**************************************************************************************
                1004     ;
                1005     ; Delay of 1us.
                1006     ;
                1007     ; Constant value defines reflects the clock applied to KCPSM3. Every instruction
                1008     ; executes in 2 clock cycles making the calculation highly predictable. The '6' in
                1009     ; the following equation even allows for 'CALL delay_1us' instruction in the initiating code.
                1010     ;
                1011     ; delay_1us_constant =  (clock_rate - 6)/4       Where 'clock_rate' is in MHz
                1012     ;
                1013     ; Register used s0
                1014     ;
19A 0000B       1015     delay_1us:              LOAD            s0, #delay_1us_constant
E: attempting to use unavailable space in program memory at address: 0x19a.
19B 06001       1016     wait_1us:               SUB             s0, #0x01
E: attempting to use unavailable space in program memory at address: 0x19b.
19C 0959B       1017                             JUMP            nz, wait_1us
W: value out of range: 0x19b, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9b.
E: attempting to use unavailable space in program memory at address: 0x19c.
19D 08080       1018                             RETURN
E: attempting to use unavailable space in program memory at address: 0x19d.
                1019     ;
                1020     ; Delay of 40us.
                1021     ;
                1022     ; Registers used s0, s1
                1023     ;
19E 00128       1024     delay_40us:             LOAD            s1, #0x28               ;40 x 1us = 40us
E: attempting to use unavailable space in program memory at address: 0x19e.
19F 0839A       1025     wait_40us:              CALL            delay_1us
W: value out of range: 0x19a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9a.
E: attempting to use unavailable space in program memory at address: 0x19f.
1A0 06101       1026                             SUB             s1, #0x01
E: attempting to use unavailable space in program memory at address: 0x1a0.
1A1 0959F       1027                             JUMP            nz, wait_40us
W: value out of range: 0x19f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9f.
E: attempting to use unavailable space in program memory at address: 0x1a1.
1A2 08080       1028                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1a2.
                1029     ;
                1030     ;
                1031     ; Delay of 1ms.
                1032     ;
                1033     ; Registers used s0, s1, s2
                1034     ;
1A3 00219       1035     delay_1ms:              LOAD            s2, #0x19               ;25 x 40us = 1ms
E: attempting to use unavailable space in program memory at address: 0x1a3.
1A4 0839E       1036     wait_1ms:               CALL            delay_40us
W: value out of range: 0x19e, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x9e.
E: attempting to use unavailable space in program memory at address: 0x1a4.
1A5 06201       1037                             SUB             s2, #0x01
E: attempting to use unavailable space in program memory at address: 0x1a5.
1A6 095A4       1038                             JUMP            nz, wait_1ms
W: value out of range: 0x1a4, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xa4.
E: attempting to use unavailable space in program memory at address: 0x1a6.
1A7 08080       1039                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1a7.
                1040     ;
                1041     ; Delay of 20ms.
                1042     ;
                1043     ; Registers used s0, s1, s2, s3
                1044     ;
1A8 00314       1045     delay_20ms:             LOAD            s3, #0x14               ;20 x 1ms = 20ms
E: attempting to use unavailable space in program memory at address: 0x1a8.
1A9 083A3       1046     wait_20ms:              CALL            delay_1ms
W: value out of range: 0x1a3, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xa3.
E: attempting to use unavailable space in program memory at address: 0x1a9.
1AA 06301       1047                             SUB             s3, #0x01
E: attempting to use unavailable space in program memory at address: 0x1aa.
1AB 095A9       1048                             JUMP            nz, wait_20ms
W: value out of range: 0x1a9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xa9.
E: attempting to use unavailable space in program memory at address: 0x1ab.
1AC 08080       1049                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1ac.
                1050     ;
                1051     ; Delay of approximately 1 second.
                1052     ;
                1053     ; Registers used s0, s1, s2, s3, s4
                1054     ;
1AD 00414       1055     delay_1s:               LOAD            s4, #0x14               ;50 x 20ms = 1000ms
E: attempting to use unavailable space in program memory at address: 0x1ad.
1AE 083A8       1056     wait_1s:                CALL            delay_20ms
W: value out of range: 0x1a8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xa8.
E: attempting to use unavailable space in program memory at address: 0x1ae.
1AF 06401       1057                             SUB             s4, #0x01
E: attempting to use unavailable space in program memory at address: 0x1af.
1B0 095AE       1058                             JUMP            nz, wait_1s
W: value out of range: 0x1ae, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xae.
E: attempting to use unavailable space in program memory at address: 0x1b0.
1B1 08080       1059                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1b1.
                1060     ;
                1061     ;
                1062     ;**************************************************************************************
                1063     ; UART communication routines
                1064     ;**************************************************************************************
                1065     ;
                1066     ; Read one character from the UART
                1067     ;
                1068     ; Character read will be returned in a register called 'UART_EQU'.
                1069     ;
                1070     ; The routine first loads the receiver FIFO buffer to see if EQU is present.
                1071     ; If the FIFO is empty, the routine waits until there is a character to read.
                1072     ; As this could take any amount of time the wait loop could include a call to a
                1073     ; subroutine which performs a useful function.
                1074     ;
                1075     ;
                1076     ; Registers used s0 and UART_EQU
                1077     ;
1B2 0A000       1078     read_from_uart:         INPUT           s0, status_port         ;load Rx_FIFO buffer
E: attempting to use unavailable space in program memory at address: 0x1b2.
1B3 00004       1079                             load            s0, #rx_EQU_present    ;wait if empty
E: attempting to use unavailable space in program memory at address: 0x1b3.
1B4 095B6       1080                             JUMP            nz, read_character
W: value out of range: 0x1b6, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb6.
E: attempting to use unavailable space in program memory at address: 0x1b4.
1B5 081B2       1081                             JUMP            read_from_uart
W: value out of range: 0x1b2, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb2.
E: attempting to use unavailable space in program memory at address: 0x1b5.
1B6 0AF01       1082     read_character:         INPUT           uart_EQU, uart_read_port ;read from FIFO
E: attempting to use unavailable space in program memory at address: 0x1b6.
1B7 08080       1083                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1b7.
                1084     ;
                1085     ;
                1086     ;
                1087     ; Transmit one character to the UART
                1088     ;
                1089     ; Character supplied in register called 'UART_EQU'.
                1090     ;
                1091     ; The routine first loads the transmit FIFO buffer to see if it is full.
                1092     ; If the FIFO is full, then the routine waits until it there is space.
                1093     ;
                1094     ; Registers used s0
                1095     ;
1B8 0A000       1096     send_to_uart:           INPUT           s0, status_port         ;load Tx_FIFO buffer
E: attempting to use unavailable space in program memory at address: 0x1b8.
1B9 00002       1097                             load            s0, #tx_full            ;wait if full
E: attempting to use unavailable space in program memory at address: 0x1b9.
1BA 091BC       1098                             JUMP            z, uart_write
W: value out of range: 0x1bc, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xbc.
E: attempting to use unavailable space in program memory at address: 0x1ba.
1BB 081B8       1099                             JUMP            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x1bb.
1BC 0EF04       1100     uart_write:             OUTPUT          uart_EQU, uart_write_port
E: attempting to use unavailable space in program memory at address: 0x1bc.
1BD 08080       1101                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1bd.
                1102     ;
                1103     ;
                1104     ;**************************************************************************************
                1105     ; Useful ASCII conversion and handling routines
                1106     ;**************************************************************************************
                1107     ;
                1108     ; Convert value provided in register s0 into ASCII characters
                1109     ;
                1110     ; The value provided must in the range 0 to 99 and will be converted into
                1111     ; two ASCII characters.
                1112     ;     The number of 'tens' will be represented by an ASCII character returned in register s1.
                1113     ;     The number of 'units' will be represented by an ASCII character returned in register s0.
                1114     ;
                1115     ; The ASCII representations of '0' to '9' are 30 to 39 hexadecimal which is simply 30 hex added to
                1116     ; the actual decimal value.
                1117     ;
                1118     ; Registers used s0 and s1.
                1119     ;
1BE 00130       1120     decimal_to_ascii:       LOAD            s1, #0x30               ;load 'tens' counter with ASCII for '0'
E: attempting to use unavailable space in program memory at address: 0x1be.
1BF 04101       1121     load_for_ten:           ADD             s1, #0x01               ;increment 'tens' value
E: attempting to use unavailable space in program memory at address: 0x1bf.
1C0 0600A       1122                             SUB             s0, #0x0a               ;try to subtract 10 from the supplied value
E: attempting to use unavailable space in program memory at address: 0x1c0.
1C1 09DBF       1123                             JUMP            nc, load_for_ten        ;repeat if subtraction was possible without underflow.
W: value out of range: 0x1bf, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xbf.
E: attempting to use unavailable space in program memory at address: 0x1c1.
1C2 06101       1124                             SUB             s1, #0x01               ;'tens' value one less ten due to underflow
E: attempting to use unavailable space in program memory at address: 0x1c2.
1C3 0403A       1125                             ADD             s0, #0x3a               ;reload units value (the remainder) and convert to ASCII
E: attempting to use unavailable space in program memory at address: 0x1c3.
1C4 08080       1126                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1c4.
                1127     ;
                1128     ;
                1129     ;
                1130     ; Convert character to upper case
                1131     ;
                1132     ; The character supplied in register s0.
                1133     ; If the character is in the range 'a' to 'z', it is converted
                1134     ; to the equivalent upper case character in the range 'A' to 'Z'.
                1135     ; All other characters remain unchanged.
                1136     ;
                1137     ; Registers used s0.
                1138     ;
1C5 00061       1139     upper_case:             load         s0, #0x61               ;eliminate character codes below 'a' (61 hex)
E: attempting to use unavailable space in program memory at address: 0x1c5.
1C6 09880       1140                             RETURN          c
E: attempting to use unavailable space in program memory at address: 0x1c6.
1C7 0007B       1141                             load         s0, #0x7b               ;eliminate character codes above 'z' (7A hex)
E: attempting to use unavailable space in program memory at address: 0x1c7.
1C8 09C80       1142                             RETURN          nc
E: attempting to use unavailable space in program memory at address: 0x1c8.
1C9 010DF       1143                             AND             s0, #0xdf               ;mask bit5 to convert to upper case
E: attempting to use unavailable space in program memory at address: 0x1c9.
1CA 08080       1144                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1ca.
                1145     ;
                1146     ;
                1147     ; Convert character '0' to '9' to numerical value in range 0 to 9
                1148     ;
                1149     ; The character supplied in register s0. If the character is in the
                1150     ; range '0' to '9', it is converted to the equivalent decimal value.
                1151     ; Characters not in the range '0' to '9' are signified by the return
                1152     ; with the CARRY flag set.
                1153     ;
                1154     ; Registers used s0.
                1155     ;
1CB 040C6       1156     _1char_to_value:        ADD             s0, #0xc6               ;reject character codes above '9' (39 hex)
E: attempting to use unavailable space in program memory at address: 0x1cb.
1CC 09880       1157                             RETURN          c                       ;carry flag is set
E: attempting to use unavailable space in program memory at address: 0x1cc.
1CD 060F6       1158                             SUB             s0, #0xf6               ;reject character codes below '0' (30 hex)
E: attempting to use unavailable space in program memory at address: 0x1cd.
1CE 08080       1159                             RETURN                                  ;carry is set if value not in range
E: attempting to use unavailable space in program memory at address: 0x1ce.
                1160     ;
                1161     ;
                1162     ; Determine the numerical value of a two character decimal string held in
                1163     ; scratch pad memory such the result is in the range 0 to 99 (00 to 63 hex).
                1164     ;
                1165     ; The string must be loadd in two consecutive memory locations and the
                1166     ; location of the first (tens) character supplied in the s1 register.
                1167     ; The result is provided in register s2. Strings not using characters in the
                1168     ; range '0' to '9' are signified by the return with the CARRY flag set.
                1169     ;
                1170     ; Registers used s0, s1 and s2.
                1171     ;
1CF 0C010       1172     _2char_to_value:        load           s0, s1                 ;read 'tens' character
E: attempting to use unavailable space in program memory at address: 0x1cf.
1D0 083CB       1173                             CALL            _1char_to_value         ;convert to numerical value
W: value out of range: 0x1cb, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xcb.
E: attempting to use unavailable space in program memory at address: 0x1d0.
1D1 09880       1174                             RETURN          c                       ;bad character - CARRY set
E: attempting to use unavailable space in program memory at address: 0x1d1.
1D2 0C200       1175                             LOAD            s2, s0
E: attempting to use unavailable space in program memory at address: 0x1d2.
1D3 0D206       1176                             SL0             s2                      ;multiply 'tens' value by 10 (0A hex)
E: attempting to use unavailable space in program memory at address: 0x1d3.
1D4 0D206       1177                             SL0             s2
E: attempting to use unavailable space in program memory at address: 0x1d4.
1D5 0C204       1178                             ADD             s2, s0
E: attempting to use unavailable space in program memory at address: 0x1d5.
1D6 0D206       1179                             SL0             s2
E: attempting to use unavailable space in program memory at address: 0x1d6.
1D7 04101       1180                             ADD             s1, #0x01               ;read 'units' character
E: attempting to use unavailable space in program memory at address: 0x1d7.
1D8 0C010       1181                             load           s0, s1
E: attempting to use unavailable space in program memory at address: 0x1d8.
1D9 083CB       1182                             CALL            _1char_to_value         ;convert to numerical value
W: value out of range: 0x1cb, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xcb.
E: attempting to use unavailable space in program memory at address: 0x1d9.
1DA 09880       1183                             RETURN          c                       ;bad character - CARRY set
E: attempting to use unavailable space in program memory at address: 0x1da.
1DB 0C204       1184                             ADD             s2, s0                  ;add units to result and clear CARRY flag
E: attempting to use unavailable space in program memory at address: 0x1db.
1DC 08080       1185                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1dc.
                1186     ;
                1187     ;
                1188     ; Convert hexadecimal value provided in register s0 into ASCII characters
                1189     ;
                1190     ; The value provided must can be any value in the range 00 to FF and will be converted into
                1191     ; two ASCII characters.
                1192     ;     The upper nibble will be represented by an ASCII character returned in register s2.
                1193     ;     The lower nibble will be represented by an ASCII character returned in register s1.
                1194     ;
                1195     ; The ASCII representations of '0' to '9' are 30 to 39 hexadecimal which is simply 30 hex
                1196     ; added to the actual decimal value. The ASCII representations of 'A' to 'F' are 41 to 46
                1197     ; hexadecimal requiring a further addition of 07 to the 30 already added.
                1198     ;
                1199     ; Registers used s0, s1 and s2.
                1200     ;
1DD 0C100       1201     hex_byte_to_ascii:      LOAD            s1, s0                  ;remember value supplied
E: attempting to use unavailable space in program memory at address: 0x1dd.
1DE 0D00E       1202                             SR0             s0                      ;isolate upper nibble
E: attempting to use unavailable space in program memory at address: 0x1de.
1DF 0D00E       1203                             SR0             s0
E: attempting to use unavailable space in program memory at address: 0x1df.
1E0 0D00E       1204                             SR0             s0
E: attempting to use unavailable space in program memory at address: 0x1e0.
1E1 0D00E       1205                             SR0             s0
E: attempting to use unavailable space in program memory at address: 0x1e1.
1E2 083E9       1206                             CALL            hex_to_ascii            ;convert
W: value out of range: 0x1e9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xe9.
E: attempting to use unavailable space in program memory at address: 0x1e2.
1E3 0C200       1207                             LOAD            s2, s0                  ;upper nibble value in s2
E: attempting to use unavailable space in program memory at address: 0x1e3.
1E4 0C010       1208                             LOAD            s0, s1                  ;reload complete value
E: attempting to use unavailable space in program memory at address: 0x1e4.
1E5 0100F       1209                             AND             s0, #0x0f               ;isolate lower nibble
E: attempting to use unavailable space in program memory at address: 0x1e5.
1E6 083E9       1210                             CALL            hex_to_ascii            ;convert
W: value out of range: 0x1e9, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xe9.
E: attempting to use unavailable space in program memory at address: 0x1e6.
1E7 0C100       1211                             LOAD            s1, s0                  ;lower nibble value in s1
E: attempting to use unavailable space in program memory at address: 0x1e7.
1E8 08080       1212                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1e8.
                1213     ;
                1214     ; Convert hexadecimal value provided in register s0 into ASCII character
                1215     ;
                1216     ;Register used s0
                1217     ;
1E9 0600A       1218     hex_to_ascii:           SUB             s0, #0x0a               ;load if value is in range 0 to 9
E: attempting to use unavailable space in program memory at address: 0x1e9.
1EA 099EC       1219                             JUMP            c, number_char
W: value out of range: 0x1ec, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xec.
E: attempting to use unavailable space in program memory at address: 0x1ea.
1EB 04007       1220                             ADD             s0, #0x07               ;ASCII char A to F in range 41 to 46
E: attempting to use unavailable space in program memory at address: 0x1eb.
1EC 0403A       1221     number_char:            ADD             s0, #0x3a               ;ASCII char 0 to 9 in range 30 to 40
E: attempting to use unavailable space in program memory at address: 0x1ec.
1ED 08080       1222                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1ed.
                1223     ;
                1224     ;
                1225     ; Send the two character HEX value of the register contents 's0' to the UART
                1226     ;
                1227     ; Registers used s0, s1, s2
                1228     ;
1EE 083DD       1229     send_hex_byte:          CALL            hex_byte_to_ascii
W: value out of range: 0x1dd, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xdd.
E: attempting to use unavailable space in program memory at address: 0x1ee.
1EF 0CF20       1230                             LOAD            uart_EQU, s2
E: attempting to use unavailable space in program memory at address: 0x1ef.
1F0 083B8       1231                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x1f0.
1F1 0CF10       1232                             LOAD            uart_EQU, s1
E: attempting to use unavailable space in program memory at address: 0x1f1.
1F2 083B8       1233                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x1f2.
1F3 08080       1234                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1f3.
                1235     ;
                1236     ;
                1237     ;
                1238     ; Send the six character HEX value of the register contents [s9,s8,s7] to the UART
                1239     ;
                1240     ; Registers used s0, s1, s2
                1241     ;
1F4 0C090       1242     send_hex_3bytes:        LOAD            s0, s9
E: attempting to use unavailable space in program memory at address: 0x1f4.
1F5 083EE       1243                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
E: attempting to use unavailable space in program memory at address: 0x1f5.
1F6 0C080       1244                             LOAD            s0, s8
E: attempting to use unavailable space in program memory at address: 0x1f6.
1F7 083EE       1245                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
E: attempting to use unavailable space in program memory at address: 0x1f7.
1F8 0C070       1246                             LOAD            s0, s7
E: attempting to use unavailable space in program memory at address: 0x1f8.
1F9 083EE       1247                             CALL            send_hex_byte
W: value out of range: 0x1ee, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xee.
E: attempting to use unavailable space in program memory at address: 0x1f9.
1FA 08080       1248                             RETURN
E: attempting to use unavailable space in program memory at address: 0x1fa.
                1249     ;
                1250     ;
                1251     ; Convert the HEX ASCII characters contained in 's3' and 's2' into
                1252     ; an equivalent hexadecimal value in register 's0'.
                1253     ;     The upper nibble is represented by an ASCII character in register s3.
                1254     ;     The lower nibble is represented by an ASCII character in register s2.
                1255     ;
                1256     ; Input characters must be in the range 00 to FF hexadecimal or the CARRY flag
                1257     ; will be set on return.
                1258     ;
                1259     ; Registers used s0, s2 and s3.
                1260     ;
1FB 0C030       1261     ascii_byte_to_hex:      LOAD            s0, s3                  ;Take upper nibble
E: attempting to use unavailable space in program memory at address: 0x1fb.
1FC 08308       1262                             CALL            ascii_to_hex            ;convert to value
W: value out of range: 0x208, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x8.
E: attempting to use unavailable space in program memory at address: 0x1fc.
1FD 09880       1263                             RETURN          c                       ;reject if out of range
E: attempting to use unavailable space in program memory at address: 0x1fd.
1FE 0C300       1264                             LOAD            s3, s0                  ;remember value
E: attempting to use unavailable space in program memory at address: 0x1fe.
1FF 0D306       1265                             SL0             s3                      ;multiply value by 16 to put in upper nibble
E: attempting to use unavailable space in program memory at address: 0x1ff.
200 0D306       1266                             SL0             s3
E: attempting to use unavailable space in program memory at address: 0x200.
201 0D306       1267                             SL0             s3
E: attempting to use unavailable space in program memory at address: 0x201.
202 0D306       1268                             SL0             s3
E: attempting to use unavailable space in program memory at address: 0x202.
203 0C020       1269                             LOAD            s0, s2                  ;Take lower nibble
E: attempting to use unavailable space in program memory at address: 0x203.
204 08308       1270                             CALL            ascii_to_hex            ;convert to value
W: value out of range: 0x208, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x8.
E: attempting to use unavailable space in program memory at address: 0x204.
205 09880       1271                             RETURN          c                       ;reject if out of range
E: attempting to use unavailable space in program memory at address: 0x205.
206 0C032       1272                             OR              s0, s3                  ;merge in the upper nibble with CARRY reset
E: attempting to use unavailable space in program memory at address: 0x206.
207 08080       1273                             RETURN
E: attempting to use unavailable space in program memory at address: 0x207.
                1274     ;
                1275     ;
                1276     ; Routine to convert ASCII EQU in 's0' to an equivalent HEX value.
                1277     ;
                1278     ; If character is not valid for hex, then CARRY is set on return.
                1279     ;
                1280     ; Register used s0
                1281     ;
208 040B9       1282     ascii_to_hex:           ADD             s0, #0xb9               ;load for above ASCII code 46 ('F')
E: attempting to use unavailable space in program memory at address: 0x208.
209 09880       1283                             RETURN          c
E: attempting to use unavailable space in program memory at address: 0x209.
20A 060E9       1284                             SUB             s0, #0xe9               ;normalise 0 to 9 with A-F in 11 to 16 hex
E: attempting to use unavailable space in program memory at address: 0x20a.
20B 09880       1285                             RETURN          c                       ;reject below ASCII code 30 ('0')
E: attempting to use unavailable space in program memory at address: 0x20b.
20C 06011       1286                             SUB             s0, #0x11               ;isolate A-F down to 00 to 05 hex
E: attempting to use unavailable space in program memory at address: 0x20c.
20D 09D12       1287                             JUMP            nc, ascii_letter
W: value out of range: 0x212, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x12.
E: attempting to use unavailable space in program memory at address: 0x20d.
20E 04007       1288                             ADD             s0, #0x07               ;load for above ASCII code 46 ('F')
E: attempting to use unavailable space in program memory at address: 0x20e.
20F 09880       1289                             RETURN          c
E: attempting to use unavailable space in program memory at address: 0x20f.
210 060F6       1290                             SUB             s0, #0xf6               ;convert to range 00 to 09
E: attempting to use unavailable space in program memory at address: 0x210.
211 08080       1291                             RETURN
E: attempting to use unavailable space in program memory at address: 0x211.
212 0400A       1292     ascii_letter:           ADD             s0, #0x0a               ;convert to range 0A to 0F
E: attempting to use unavailable space in program memory at address: 0x212.
213 08080       1293                             RETURN
E: attempting to use unavailable space in program memory at address: 0x213.
                1294     ;
                1295     ;
                1296     ; Read one character from UART and echo.
                1297     ; Convert to upper case and return.
                1298     ;
                1299     ;
214 083B2       1300     read_upper_case:        CALL            read_from_uart          ;read command character from UART
W: value out of range: 0x1b2, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb2.
E: attempting to use unavailable space in program memory at address: 0x214.
215 083B8       1301                             CALL            send_to_uart            ;echo character
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x215.
216 0C0F0       1302                             LOAD            s0, uart_EQU           ;convert to upper case
E: attempting to use unavailable space in program memory at address: 0x216.
217 083C5       1303                             CALL            upper_case
W: value out of range: 0x1c5, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xc5.
E: attempting to use unavailable space in program memory at address: 0x217.
218 08080       1304                             RETURN
E: attempting to use unavailable space in program memory at address: 0x218.
                1305     ;
                1306     ;
                1307     ; Read two hex characters from UART and convert to single byte EQU
                1308     ;
219 08314       1309     obtain_8bits:           CALL            read_upper_case         ;obtain one byte from UART
W: value out of range: 0x214, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x14.
E: attempting to use unavailable space in program memory at address: 0x219.
21A 0C300       1310                             LOAD            s3, s0
E: attempting to use unavailable space in program memory at address: 0x21a.
21B 08314       1311                             CALL            read_upper_case
W: value out of range: 0x214, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x14.
E: attempting to use unavailable space in program memory at address: 0x21b.
21C 0C200       1312                             LOAD            s2, s0
E: attempting to use unavailable space in program memory at address: 0x21c.
21D 083FB       1313                             CALL            ascii_byte_to_hex
W: value out of range: 0x1fb, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xfb.
E: attempting to use unavailable space in program memory at address: 0x21d.
21E 08080       1314                             RETURN
E: attempting to use unavailable space in program memory at address: 0x21e.
                1315     ;
                1316     ;**************************************************************************************
                1317     ; Text messages
                1318     ;**************************************************************************************
                1319     ;
                1320     ;
                1321     ; Send Carriage Return to the UART
                1322     ;
21F 00F0D       1323     send_cr:                LOAD            uart_EQU, #character_cr
E: attempting to use unavailable space in program memory at address: 0x21f.
220 083B8       1324                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x220.
221 08080       1325                             RETURN
E: attempting to use unavailable space in program memory at address: 0x221.
                1326     ;
                1327     ; Send a space to the UART
                1328     ;
222 00F20       1329     send_space:             LOAD            uart_EQU, #character_space
E: attempting to use unavailable space in program memory at address: 0x222.
223 083B8       1330                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x223.
224 08080       1331                             RETURN
E: attempting to use unavailable space in program memory at address: 0x224.
                1332     ;
                1333     ;
                1334     ; Send a minus sign to the UART
                1335     ;
225 00F2D       1336     send_minus:             LOAD            uart_EQU, #character_minus
E: attempting to use unavailable space in program memory at address: 0x225.
226 083B8       1337                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x226.
227 08080       1338                             RETURN
E: attempting to use unavailable space in program memory at address: 0x227.
                1339     ;
                1340     ;
                1341     ; Send 'PicoBlaze DS2432 Communicator v1.00' string to the UART
                1342     ;
228 0831F       1343     send_welcome:           CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x228.
229 0831F       1344                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x229.
22A 00F50       1345                             LOAD            uart_EQU, #_character_p
E: attempting to use unavailable space in program memory at address: 0x22a.
22B 083B8       1346                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x22b.
22C 00F69       1347                             LOAD            uart_EQU, #character_i
E: attempting to use unavailable space in program memory at address: 0x22c.
22D 083B8       1348                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x22d.
22E 00F63       1349                             LOAD            uart_EQU, #character_c
E: attempting to use unavailable space in program memory at address: 0x22e.
22F 083B8       1350                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x22f.
230 00F6F       1351                             LOAD            uart_EQU, #character_o
E: attempting to use unavailable space in program memory at address: 0x230.
231 083B8       1352                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x231.
232 00F42       1353                             LOAD            uart_EQU, #_character_b
E: attempting to use unavailable space in program memory at address: 0x232.
233 083B8       1354                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x233.
234 00F6C       1355                             LOAD            uart_EQU, #character_l
E: attempting to use unavailable space in program memory at address: 0x234.
235 083B8       1356                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x235.
236 00F61       1357                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x236.
237 083B8       1358                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x237.
238 00F7A       1359                             LOAD            uart_EQU, #character_z
E: attempting to use unavailable space in program memory at address: 0x238.
239 083B8       1360                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x239.
23A 00F65       1361                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x23a.
23B 083B8       1362                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x23b.
23C 08322       1363                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x23c.
23D 00F44       1364                             LOAD            uart_EQU, #_character_d
E: attempting to use unavailable space in program memory at address: 0x23d.
23E 083B8       1365                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x23e.
23F 00F53       1366                             LOAD            uart_EQU, #_character_s
E: attempting to use unavailable space in program memory at address: 0x23f.
240 083B8       1367                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x240.
241 00F32       1368                             LOAD            uart_EQU, #character_2
E: attempting to use unavailable space in program memory at address: 0x241.
242 083B8       1369                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x242.
243 00F34       1370                             LOAD            uart_EQU, #character_4
E: attempting to use unavailable space in program memory at address: 0x243.
244 083B8       1371                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x244.
245 00F33       1372                             LOAD            uart_EQU, #character_3
E: attempting to use unavailable space in program memory at address: 0x245.
246 083B8       1373                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x246.
247 00F32       1374                             LOAD            uart_EQU, #character_2
E: attempting to use unavailable space in program memory at address: 0x247.
248 083B8       1375                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x248.
249 08322       1376                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x249.
24A 00F43       1377                             LOAD            uart_EQU, #_character_c
E: attempting to use unavailable space in program memory at address: 0x24a.
24B 083B8       1378                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x24b.
24C 00F6F       1379                             LOAD            uart_EQU, #character_o
E: attempting to use unavailable space in program memory at address: 0x24c.
24D 083B8       1380                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x24d.
24E 00F6D       1381                             LOAD            uart_EQU, #character_m
E: attempting to use unavailable space in program memory at address: 0x24e.
24F 083B8       1382                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x24f.
250 083B8       1383                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x250.
251 00F75       1384                             LOAD            uart_EQU, #character_u
E: attempting to use unavailable space in program memory at address: 0x251.
252 083B8       1385                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x252.
253 00F6E       1386                             LOAD            uart_EQU, #character_n
E: attempting to use unavailable space in program memory at address: 0x253.
254 083B8       1387                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x254.
255 00F69       1388                             LOAD            uart_EQU, #character_i
E: attempting to use unavailable space in program memory at address: 0x255.
256 083B8       1389                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x256.
257 00F63       1390                             LOAD            uart_EQU, #character_c
E: attempting to use unavailable space in program memory at address: 0x257.
258 083B8       1391                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x258.
259 00F61       1392                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x259.
25A 083B8       1393                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x25a.
25B 00F74       1394                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x25b.
25C 083B8       1395                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x25c.
25D 00F6F       1396                             LOAD            uart_EQU, #character_o
E: attempting to use unavailable space in program memory at address: 0x25d.
25E 083B8       1397                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x25e.
25F 00F72       1398                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x25f.
260 083B8       1399                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x260.
261 08322       1400                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x261.
262 00F76       1401                             LOAD            uart_EQU, #character_v
E: attempting to use unavailable space in program memory at address: 0x262.
263 083B8       1402                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x263.
264 00F31       1403                             LOAD            uart_EQU, #character_1
E: attempting to use unavailable space in program memory at address: 0x264.
265 083B8       1404                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x265.
266 00F2E       1405                             LOAD            uart_EQU, #character_fullstop
E: attempting to use unavailable space in program memory at address: 0x266.
267 083B8       1406                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x267.
268 00F30       1407                             LOAD            uart_EQU, #character_0
E: attempting to use unavailable space in program memory at address: 0x268.
269 083B8       1408                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x269.
26A 00F30       1409                             LOAD            uart_EQU, #character_0
E: attempting to use unavailable space in program memory at address: 0x26a.
26B 083B8       1410                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x26b.
26C 0831F       1411                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x26c.
26D 0831F       1412                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x26d.
26E 08080       1413                             RETURN
E: attempting to use unavailable space in program memory at address: 0x26e.
                1414     ;
                1415     ;
                1416     ;
                1417     ; Send reset menu to the UART
                1418     ;
26F 0831F       1419     send_reset_menu:        CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x26f.
270 0831F       1420                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x270.
271 083D0       1421                             CALL            send_hhelp
W: value out of range: 0x2d0, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xd0.
E: attempting to use unavailable space in program memory at address: 0x271.
272 00F31       1422                             LOAD            uart_EQU, #character_1
E: attempting to use unavailable space in program memory at address: 0x272.
273 083B8       1423                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x273.
274 08325       1424                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x274.
275 08307       1425                             CALL            send_master_reset
W: value out of range: 0x307, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x7.
E: attempting to use unavailable space in program memory at address: 0x275.
276 0831F       1426                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x276.
277 08080       1427                             RETURN
E: attempting to use unavailable space in program memory at address: 0x277.
                1428     ;
                1429     ;
                1430     ;
                1431     ;
                1432     ;
                1433     ;
                1434     ; Send ROM menu to the UART
                1435     ;
278 0831F       1436     send_rom_menu:          CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x278.
279 0831F       1437                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x279.
27A 083D0       1438                             CALL            send_hhelp
W: value out of range: 0x2d0, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xd0.
E: attempting to use unavailable space in program memory at address: 0x27a.
27B 00F31       1439                             LOAD            uart_EQU, #character_1
E: attempting to use unavailable space in program memory at address: 0x27b.
27C 083B8       1440                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x27c.
27D 08325       1441                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x27d.
27E 08307       1442                             CALL            send_master_reset
W: value out of range: 0x307, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x7.
E: attempting to use unavailable space in program memory at address: 0x27e.
27F 0831F       1443                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x27f.
280 00F32       1444                             LOAD            uart_EQU, #character_2
E: attempting to use unavailable space in program memory at address: 0x280.
281 083B8       1445                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x281.
282 08325       1446                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x282.
283 08331       1447                             CALL            send_read
W: value out of range: 0x331, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x31.
E: attempting to use unavailable space in program memory at address: 0x283.
284 08322       1448                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x284.
285 083DE       1449                             CALL            send_rom
W: value out of range: 0x2de, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xde.
E: attempting to use unavailable space in program memory at address: 0x285.
286 08322       1450                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x286.
287 08356       1451                             CALL            send_command
W: value out of range: 0x356, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x287.
288 0831F       1452                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x288.
289 00F33       1453                             LOAD            uart_EQU, #character_3
E: attempting to use unavailable space in program memory at address: 0x289.
28A 083B8       1454                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x28a.
28B 08325       1455                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x28b.
28C 08328       1456                             CALL            send_skip
W: value out of range: 0x328, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x28.
E: attempting to use unavailable space in program memory at address: 0x28c.
28D 08322       1457                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x28d.
28E 083DE       1458                             CALL            send_rom
W: value out of range: 0x2de, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xde.
E: attempting to use unavailable space in program memory at address: 0x28e.
28F 08322       1459                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x28f.
290 08356       1460                             CALL            send_command
W: value out of range: 0x356, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x290.
291 0831F       1461                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x291.
292 08080       1462                             RETURN
E: attempting to use unavailable space in program memory at address: 0x292.
                1463     ;
                1464     ;
                1465     ;
                1466     ; Send DS2432 menu to the UART
                1467     ;
293 0831F       1468     send_ds2432_menu:       CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x293.
294 0831F       1469                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x294.
295 083D0       1470                             CALL            send_hhelp
W: value out of range: 0x2d0, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xd0.
E: attempting to use unavailable space in program memory at address: 0x295.
296 00F31       1471                             LOAD            uart_EQU, #character_1
E: attempting to use unavailable space in program memory at address: 0x296.
297 083B8       1472                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x297.
298 08325       1473                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x298.
299 08307       1474                             CALL            send_master_reset
W: value out of range: 0x307, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x7.
E: attempting to use unavailable space in program memory at address: 0x299.
29A 0831F       1475                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x29a.
29B 00F32       1476                             LOAD            uart_EQU, #character_2
E: attempting to use unavailable space in program memory at address: 0x29b.
29C 083B8       1477                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x29c.
29D 08325       1478                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x29d.
29E 08331       1479                             CALL            send_read
W: value out of range: 0x331, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x31.
E: attempting to use unavailable space in program memory at address: 0x29e.
29F 08322       1480                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x29f.
2A0 083E5       1481                             CALL            send_memory
W: value out of range: 0x2e5, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xe5.
E: attempting to use unavailable space in program memory at address: 0x2a0.
2A1 08322       1482                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2a1.
2A2 08356       1483                             CALL            send_command
W: value out of range: 0x356, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x2a2.
2A3 0831F       1484                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2a3.
2A4 00F33       1485                             LOAD            uart_EQU, #character_3
E: attempting to use unavailable space in program memory at address: 0x2a4.
2A5 083B8       1486                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2a5.
2A6 08325       1487                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x2a6.
2A7 0833A       1488                             CALL            send_write
W: value out of range: 0x33a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x3a.
E: attempting to use unavailable space in program memory at address: 0x2a7.
2A8 08322       1489                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2a8.
2A9 083F2       1490                             CALL            send_scratchpad
W: value out of range: 0x2f2, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xf2.
E: attempting to use unavailable space in program memory at address: 0x2a9.
2AA 08322       1491                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2aa.
2AB 083E5       1492                             CALL            send_memory
W: value out of range: 0x2e5, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xe5.
E: attempting to use unavailable space in program memory at address: 0x2ab.
2AC 08322       1493                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2ac.
2AD 08356       1494                             CALL            send_command
W: value out of range: 0x356, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x2ad.
2AE 0831F       1495                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2ae.
2AF 00F34       1496                             LOAD            uart_EQU, #character_4
E: attempting to use unavailable space in program memory at address: 0x2af.
2B0 083B8       1497                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2b0.
2B1 08325       1498                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x2b1.
2B2 08331       1499                             CALL            send_read
W: value out of range: 0x331, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x31.
E: attempting to use unavailable space in program memory at address: 0x2b2.
2B3 08322       1500                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2b3.
2B4 083F2       1501                             CALL            send_scratchpad
W: value out of range: 0x2f2, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xf2.
E: attempting to use unavailable space in program memory at address: 0x2b4.
2B5 08322       1502                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2b5.
2B6 083E5       1503                             CALL            send_memory
W: value out of range: 0x2e5, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xe5.
E: attempting to use unavailable space in program memory at address: 0x2b6.
2B7 08322       1504                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2b7.
2B8 08356       1505                             CALL            send_command
W: value out of range: 0x356, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x56.
E: attempting to use unavailable space in program memory at address: 0x2b8.
2B9 0831F       1506                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2b9.
2BA 00F35       1507                             LOAD            uart_EQU, #character_5
E: attempting to use unavailable space in program memory at address: 0x2ba.
2BB 083B8       1508                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2bb.
2BC 08325       1509                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x2bc.
2BD 0833A       1510                             CALL            send_write
W: value out of range: 0x33a, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x3a.
E: attempting to use unavailable space in program memory at address: 0x2bd.
2BE 08322       1511                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2be.
2BF 0831F       1512                             CALL            send_byte
W: value out of range: 0x31f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2bf.
2C0 0831F       1513                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2c0.
2C1 00F36       1514                             LOAD            uart_EQU, #character_6
E: attempting to use unavailable space in program memory at address: 0x2c1.
2C2 083B8       1515                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2c2.
2C3 08325       1516                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x2c3.
2C4 08331       1517                             CALL            send_read
W: value out of range: 0x331, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x31.
E: attempting to use unavailable space in program memory at address: 0x2c4.
2C5 08322       1518                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x2c5.
2C6 0831F       1519                             CALL            send_byte
W: value out of range: 0x31f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2c6.
2C7 0831F       1520                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2c7.
2C8 08080       1521                             RETURN
E: attempting to use unavailable space in program memory at address: 0x2c8.
                1522     ;
                1523     ;
                1524     ;
                1525     ; Send carriage return, 'OK' and carriage return to the UART
                1526     ;
2C9 0831F       1527     send_ok:                CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2c9.
2CA 00F4F       1528                             LOAD            uart_EQU, #_character_o
E: attempting to use unavailable space in program memory at address: 0x2ca.
2CB 083B8       1529                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2cb.
2CC 00F4B       1530                             LOAD            uart_EQU, #_character_k
E: attempting to use unavailable space in program memory at address: 0x2cc.
2CD 083B8       1531                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2cd.
2CE 0831F       1532                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2ce.
2CF 08080       1533                             RETURN
E: attempting to use unavailable space in program memory at address: 0x2cf.
                1534     ;
                1535     ;
                1536     ; Send 'H-Help'menu to the UART
                1537     ;
2D0 0831F       1538     send_hhelp:             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2d0.
2D1 00F48       1539                             LOAD            uart_EQU, #_character_h
E: attempting to use unavailable space in program memory at address: 0x2d1.
2D2 083B8       1540                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2d2.
2D3 08325       1541                             CALL            send_minus
W: value out of range: 0x225, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x25.
E: attempting to use unavailable space in program memory at address: 0x2d3.
2D4 00F48       1542                             LOAD            uart_EQU, #_character_h
E: attempting to use unavailable space in program memory at address: 0x2d4.
2D5 083B8       1543                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2d5.
2D6 00F65       1544                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x2d6.
2D7 083B8       1545                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2d7.
2D8 00F6C       1546                             LOAD            uart_EQU, #character_l
E: attempting to use unavailable space in program memory at address: 0x2d8.
2D9 083B8       1547                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2d9.
2DA 00F70       1548                             LOAD            uart_EQU, #character_p
E: attempting to use unavailable space in program memory at address: 0x2da.
2DB 083B8       1549                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2db.
2DC 0831F       1550                             CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x2dc.
2DD 08080       1551                             RETURN
E: attempting to use unavailable space in program memory at address: 0x2dd.
                1552     ;
                1553     ;
                1554     ; Send 'ROM' to the UART
                1555     ;
2DE 00F52       1556     send_rom:               LOAD            uart_EQU, #_character_r
E: attempting to use unavailable space in program memory at address: 0x2de.
2DF 083B8       1557                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2df.
2E0 00F4F       1558                             LOAD            uart_EQU, #_character_o
E: attempting to use unavailable space in program memory at address: 0x2e0.
2E1 083B8       1559                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2e1.
2E2 00F4D       1560                             LOAD            uart_EQU, #_character_m
E: attempting to use unavailable space in program memory at address: 0x2e2.
2E3 083B8       1561                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2e3.
2E4 08080       1562                             RETURN
E: attempting to use unavailable space in program memory at address: 0x2e4.
                1563     ;
                1564     ;
                1565     ; Send 'Memory' to the UART
                1566     ;
2E5 00F4D       1567     send_memory:            LOAD            uart_EQU, #_character_m
E: attempting to use unavailable space in program memory at address: 0x2e5.
2E6 083B8       1568                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2e6.
2E7 00F65       1569                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x2e7.
2E8 083B8       1570                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2e8.
2E9 00F6D       1571                             LOAD            uart_EQU, #character_m
E: attempting to use unavailable space in program memory at address: 0x2e9.
2EA 083B8       1572                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2ea.
2EB 00F6F       1573                             LOAD            uart_EQU, #character_o
E: attempting to use unavailable space in program memory at address: 0x2eb.
2EC 083B8       1574                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2ec.
2ED 00F72       1575                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x2ed.
2EE 083B8       1576                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2ee.
2EF 00F79       1577                             LOAD            uart_EQU, #character_y
E: attempting to use unavailable space in program memory at address: 0x2ef.
2F0 083B8       1578                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2f0.
2F1 08080       1579                             RETURN
E: attempting to use unavailable space in program memory at address: 0x2f1.
                1580     ;
                1581     ;
                1582     ; Send 'Scratchpad' to the UART
                1583     ;
2F2 00F53       1584     send_scratchpad:        LOAD            uart_EQU, #_character_s
E: attempting to use unavailable space in program memory at address: 0x2f2.
2F3 083B8       1585                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2f3.
2F4 00F63       1586                             LOAD            uart_EQU, #character_c
E: attempting to use unavailable space in program memory at address: 0x2f4.
2F5 083B8       1587                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2f5.
2F6 00F72       1588                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x2f6.
2F7 083B8       1589                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2f7.
2F8 00F61       1590                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x2f8.
2F9 083B8       1591                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2f9.
2FA 00F74       1592                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x2fa.
2FB 083B8       1593                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2fb.
2FC 00F63       1594                             LOAD            uart_EQU, #character_c
E: attempting to use unavailable space in program memory at address: 0x2fc.
2FD 083B8       1595                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2fd.
2FE 00F68       1596                             LOAD            uart_EQU, #character_h
E: attempting to use unavailable space in program memory at address: 0x2fe.
2FF 083B8       1597                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x2ff.
300 00F70       1598                             LOAD            uart_EQU, #character_p
E: attempting to use unavailable space in program memory at address: 0x300.
301 083B8       1599                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x301.
302 00F61       1600                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x302.
303 083B8       1601                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x303.
304 00F64       1602                             LOAD            uart_EQU, #character_d
E: attempting to use unavailable space in program memory at address: 0x304.
305 083B8       1603                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x305.
306 08080       1604                             RETURN
E: attempting to use unavailable space in program memory at address: 0x306.
                1605     ;
                1606     ;
                1607     ; Send 'Master Reset' to the UART
                1608     ;
307 00F4D       1609     send_master_reset:      LOAD            uart_EQU, #_character_m
E: attempting to use unavailable space in program memory at address: 0x307.
308 083B8       1610                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x308.
309 00F61       1611                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x309.
30A 083B8       1612                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x30a.
30B 00F73       1613                             LOAD            uart_EQU, #character_s
E: attempting to use unavailable space in program memory at address: 0x30b.
30C 083B8       1614                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x30c.
30D 00F74       1615                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x30d.
30E 083B8       1616                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x30e.
30F 00F65       1617                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x30f.
310 083B8       1618                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x310.
311 00F72       1619                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x311.
312 083B8       1620                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x312.
313 08322       1621                             CALL            send_space
W: value out of range: 0x222, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x22.
E: attempting to use unavailable space in program memory at address: 0x313.
314 00F52       1622                             LOAD            uart_EQU, #_character_r
E: attempting to use unavailable space in program memory at address: 0x314.
315 083B8       1623                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x315.
316 00F65       1624                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x316.
317 083B8       1625                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x317.
318 00F73       1626                             LOAD            uart_EQU, #character_s
E: attempting to use unavailable space in program memory at address: 0x318.
319 083B8       1627                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x319.
31A 00F65       1628                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x31a.
31B 083B8       1629                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x31b.
31C 00F74       1630                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x31c.
31D 083B8       1631                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x31d.
31E 08080       1632                             RETURN
E: attempting to use unavailable space in program memory at address: 0x31e.
                1633     ;
                1634     ;
                1635     ; Send 'Byte' to the UART
                1636     ;
31F 00F42       1637     send_byte:              LOAD            uart_EQU, #_character_b
E: attempting to use unavailable space in program memory at address: 0x31f.
320 083B8       1638                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x320.
321 00F79       1639                             LOAD            uart_EQU, #character_y
E: attempting to use unavailable space in program memory at address: 0x321.
322 083B8       1640                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x322.
323 00F74       1641                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x323.
324 083B8       1642                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x324.
325 00F65       1643                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x325.
326 083B8       1644                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x326.
327 08080       1645                             RETURN
E: attempting to use unavailable space in program memory at address: 0x327.
                1646     ;
                1647     ;
                1648     ; Send 'Skip' to the UART
                1649     ;
328 00F53       1650     send_skip:              LOAD            uart_EQU, #_character_s
E: attempting to use unavailable space in program memory at address: 0x328.
329 083B8       1651                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x329.
32A 00F6B       1652                             LOAD            uart_EQU, #character_k
E: attempting to use unavailable space in program memory at address: 0x32a.
32B 083B8       1653                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x32b.
32C 00F69       1654                             LOAD            uart_EQU, #character_i
E: attempting to use unavailable space in program memory at address: 0x32c.
32D 083B8       1655                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x32d.
32E 00F70       1656                             LOAD            uart_EQU, #character_p
E: attempting to use unavailable space in program memory at address: 0x32e.
32F 083B8       1657                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x32f.
330 08080       1658                             RETURN
E: attempting to use unavailable space in program memory at address: 0x330.
                1659     ;
                1660     ;
                1661     ; Send 'Read' to the UART
                1662     ;
331 00F52       1663     send_read:              LOAD            uart_EQU, #_character_r
E: attempting to use unavailable space in program memory at address: 0x331.
332 083B8       1664                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x332.
333 00F65       1665                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x333.
334 083B8       1666                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x334.
335 00F61       1667                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x335.
336 083B8       1668                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x336.
337 00F64       1669                             LOAD            uart_EQU, #character_d
E: attempting to use unavailable space in program memory at address: 0x337.
338 083B8       1670                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x338.
339 08080       1671                             RETURN
E: attempting to use unavailable space in program memory at address: 0x339.
                1672     ;
                1673     ;
                1674     ; Send 'Write' to the UART
                1675     ;
33A 00F57       1676     send_write:             LOAD            uart_EQU, #_character_w
E: attempting to use unavailable space in program memory at address: 0x33a.
33B 083B8       1677                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x33b.
33C 00F72       1678                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x33c.
33D 083B8       1679                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x33d.
33E 00F69       1680                             LOAD            uart_EQU, #character_i
E: attempting to use unavailable space in program memory at address: 0x33e.
33F 083B8       1681                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x33f.
340 00F74       1682                             LOAD            uart_EQU, #character_t
E: attempting to use unavailable space in program memory at address: 0x340.
341 083B8       1683                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x341.
342 00F65       1684                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x342.
343 083B8       1685                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x343.
344 08080       1686                             RETURN
E: attempting to use unavailable space in program memory at address: 0x344.
                1687     ;
                1688     ;
                1689     ; Send 'Pass' to the UART
                1690     ;
345 00F50       1691     send_pass:              LOAD            uart_EQU, #_character_p
E: attempting to use unavailable space in program memory at address: 0x345.
346 083B8       1692                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x346.
347 00F61       1693                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x347.
348 083B8       1694                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x348.
349 00F73       1695                             LOAD            uart_EQU, #character_s
E: attempting to use unavailable space in program memory at address: 0x349.
34A 083B8       1696                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x34a.
34B 083B8       1697                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x34b.
34C 08080       1698                             RETURN
E: attempting to use unavailable space in program memory at address: 0x34c.
                1699     ;
                1700     ;
                1701     ; Send 'Fail' to the UART
                1702     ;
34D 00F46       1703     send_fail:              LOAD            uart_EQU, #_character_f
E: attempting to use unavailable space in program memory at address: 0x34d.
34E 083B8       1704                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x34e.
34F 00F61       1705                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x34f.
350 083B8       1706                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x350.
351 00F69       1707                             LOAD            uart_EQU, #character_i
E: attempting to use unavailable space in program memory at address: 0x351.
352 083B8       1708                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x352.
353 00F6C       1709                             LOAD            uart_EQU, #character_l
E: attempting to use unavailable space in program memory at address: 0x353.
354 083B8       1710                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x354.
355 08080       1711                             RETURN
E: attempting to use unavailable space in program memory at address: 0x355.
                1712     ;
                1713     ;
                1714     ; Send 'Command' to the UART
                1715     ;
356 00F43       1716     send_command:           LOAD            uart_EQU, #_character_c
E: attempting to use unavailable space in program memory at address: 0x356.
357 083B8       1717                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x357.
358 00F6F       1718                             LOAD            uart_EQU, #character_o
E: attempting to use unavailable space in program memory at address: 0x358.
359 083B8       1719                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x359.
35A 00F6D       1720                             LOAD            uart_EQU, #character_m
E: attempting to use unavailable space in program memory at address: 0x35a.
35B 083B8       1721                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x35b.
35C 083B8       1722                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x35c.
35D 00F61       1723                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x35d.
35E 083B8       1724                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x35e.
35F 00F6E       1725                             LOAD            uart_EQU, #character_n
E: attempting to use unavailable space in program memory at address: 0x35f.
360 083B8       1726                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x360.
361 00F64       1727                             LOAD            uart_EQU, #character_d
E: attempting to use unavailable space in program memory at address: 0x361.
362 083B8       1728                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x362.
363 08080       1729                             RETURN
E: attempting to use unavailable space in program memory at address: 0x363.
                1730     ;
                1731     ;
                1732     ; Send 'address=' to the UART
                1733     ;
364 0831F       1734     send_address:           CALL            send_cr
W: value out of range: 0x21f, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0x1f.
E: attempting to use unavailable space in program memory at address: 0x364.
365 00F61       1735                             LOAD            uart_EQU, #character_a
E: attempting to use unavailable space in program memory at address: 0x365.
366 083B8       1736                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x366.
367 00F64       1737                             LOAD            uart_EQU, #character_d
E: attempting to use unavailable space in program memory at address: 0x367.
368 083B8       1738                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x368.
369 083B8       1739                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x369.
36A 00F72       1740                             LOAD            uart_EQU, #character_r
E: attempting to use unavailable space in program memory at address: 0x36a.
36B 083B8       1741                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x36b.
36C 00F65       1742                             LOAD            uart_EQU, #character_e
E: attempting to use unavailable space in program memory at address: 0x36c.
36D 083B8       1743                             CALL            send_to_uart
W: value out of range: 0x1b8, allowed range is [0x0,0xff] (trimmed to 8 bits) which makes it 0xb8.
E: attempting to use unavailable space in program memory at address: 0x36d.
36E 00F73       1744                             LOAD            uart_EQU, #character_s
E: attempting to use unavailable space in program memory at address: 0x36e.
36F 083B8       1745                             CALL            send_to_uart
W: maximum number of messages reached, suppressing compiler message generation.
370 083B8       1746                             CALL            send_to_uart
371 00F3D       1747     send_equals:            LOAD            uart_EQU, #character_equals
372 083B8       1748                             CALL            send_to_uart
373 08080       1749                             RETURN
                1750     ;
                1751     ;
                1752     ; Send 'EQU' to the UART
                1753     ;
374 0831F       1754     send_EQU:              CALL            send_cr
375 00F64       1755                             LOAD            uart_EQU, #character_d
376 083B8       1756                             CALL            send_to_uart
377 00F61       1757                             LOAD            uart_EQU, #character_a
378 083B8       1758                             CALL            send_to_uart
379 00F74       1759                             LOAD            uart_EQU, #character_t
37A 083B8       1760                             CALL            send_to_uart
37B 00F61       1761                             LOAD            uart_EQU, #character_a
37C 083B8       1762                             CALL            send_to_uart
37D 08080       1763                             RETURN
                1764     ;
                1765     ;
                1766     ; Send 'E/S=' to the UART
                1767     ;
37E 0831F       1768     send_es:                CALL            send_cr
37F 00F45       1769                             LOAD            uart_EQU, #_character_e
380 083B8       1770                             CALL            send_to_uart
381 00F2F       1771                             LOAD            uart_EQU, #character_divide
382 083B8       1772                             CALL            send_to_uart
383 00F53       1773                             LOAD            uart_EQU, #_character_s
384 083B8       1774                             CALL            send_to_uart
385 08171       1775                             JUMP            send_equals
                1776     ;
                1777     ;
                1778     ; Send 'code=' to the UART
                1779     ;
386 00F63       1780     send_code:              LOAD            uart_EQU, #character_c
387 083B8       1781                             CALL            send_to_uart
388 00F6F       1782                             LOAD            uart_EQU, #character_o
389 083B8       1783                             CALL            send_to_uart
38A 00F64       1784                             LOAD            uart_EQU, #character_d
38B 083B8       1785                             CALL            send_to_uart
38C 00F65       1786                             LOAD            uart_EQU, #character_e
38D 083B8       1787                             CALL            send_to_uart
38E 08171       1788                             JUMP            send_equals
                1789     ;
                1790     ;
                1791     ; Send 'serial=' to the UART
                1792     ;
38F 00F73       1793     send_serial:            LOAD            uart_EQU, #character_s
390 083B8       1794                             CALL            send_to_uart
391 00F65       1795                             LOAD            uart_EQU, #character_e
392 083B8       1796                             CALL            send_to_uart
393 00F72       1797                             LOAD            uart_EQU, #character_r
394 083B8       1798                             CALL            send_to_uart
395 00F69       1799                             LOAD            uart_EQU, #character_i
396 083B8       1800                             CALL            send_to_uart
397 00F61       1801                             LOAD            uart_EQU, #character_a
398 083B8       1802                             CALL            send_to_uart
399 00F6C       1803                             LOAD            uart_EQU, #character_l
39A 083B8       1804                             CALL            send_to_uart
39B 08171       1805                             JUMP            send_equals
                1806     ;
                1807     ;
                1808     ; Send 'CRC=' to the UART
                1809     ;
39C 00F43       1810     send_crc:               LOAD            uart_EQU, #_character_c
39D 083B8       1811                             CALL            send_to_uart
39E 00F52       1812                             LOAD            uart_EQU, #_character_r
39F 083B8       1813                             CALL            send_to_uart
3A0 00F43       1814                             LOAD            uart_EQU, #_character_c
3A1 08171       1815                             JUMP            send_equals
                1816     ;
                1817     ;
                1818     ;**************************************************************************************
                1819     ; Interrupt Service Routine (ISR)
                1820     ;**************************************************************************************
                1821     ;
                1822     ; Interrupts are not used in this design. This is a place keeper only.
                1823     ;
  003FE         1824                             ORG             0x3fe
3FE 080F0       1825     isr:                    RETURNI         enable
                1826     ;
                1827     ;
                1828     ;**************************************************************************************
                1829     ; Interrupt Vector
                1830     ;**************************************************************************************
                1831     ;
  003FF         1832                             ORG             0x3ff
3FF 081FE       1833                             JUMP            isr
                1834     ;
                1835     ;
                1836
