                   1     ; testing of INPUT and OUTPUT instructions
                   2     device "003_picoblazecopy.procdef"
  00020            3     port_id         PORT            20h
                   4
  00001            5     inout_data      REG             s0
E: symbol not defined: `S0'.
  00001            6     pointer_in      REG             s1
E: symbol not defined: `S1'.
W: reusing already reserved space in register file memory at address: 0x1.
  00001            7     pointer_out     REG             s2
E: symbol not defined: `S2'.
W: reusing already reserved space in register file memory at address: 0x1.
                   8
                   9
  00000           10     org 00h
                  11     ; testing here
                  12                     ;; flag[C] == false
                  13                     ;; flag[Z] == false
  00000           14     start:          LOAD            pointer_in,#00h
E: instruction LOAD cannot be used with these operands.
                  15                     LOAD            pointer_out,#00h
                  16                     LOAD            inout_data,#ffh
                  17                     ;; step 3
                  18                     ;; reg[0] == 0xff
                  19                     ;; reg[1] == 0
                  20                     ;; reg[2] == 0
                  21                     ;; flag[C] == false
                  22                     ;; flag[Z] == false
                  23                     INPUT           inout_data,port_id
                  24                     ;; step
                  25
                  26
                  27
                  28     dataIN:         INPUT           inout_data,@pointer_in
                  29                     ;; STEP
                  30
                  31                     ;; reg[1] == 0
                  32                     ;; flag[C] == false
                  33                     ;; flag[Z] == false
                  34                     ADD             pointer_in,#1
                  35                     ;; step
                  36                     ;; reg[1] == 1
                  37                     ;; flag[C] == false
                  38                     ;; flag[Z] == false
                  39                     CMP             pointer_in,#2
                  40                     ;; step
                  41                     ;; flag[C] == true
                  42                     ;; flag[Z] == false
                  43                     JUMP            NZ,dataIN
                  44                     ;; step
                  45                     ;; flag[C] == true
                  46                     ;; flag[Z] == false
                  47
                  48                     ;; # jumped to dataIN
                  49                     ;; step
                  50                     ;; flag[C] != false
                  51                     ;; flag[Z] == false
                  52                     ;; step
                  53                     ;; # add instructions
                  54                     ;; flag[C] == false
                  55                     ;; flag[Z] == false
                  56                     ;; step
                  57                     ;; # cmp instruction
                  58                     ;; flag[C] == false
                  59                     ;; flag[Z] != false
                  60                     ;; step
                  61                     ;; # jump instruction
                  62                     ;; flag[C] == false
                  63                     ;; flag[Z] != false
                  64
                  65                     ;; step 3
                  66                     ;; flag[C] == true
                  67                     ;; flag[Z] == false
                  68
                  69     dataOUT:        OUTPUT          inout_data,@pointer_out
                  70                     ADD             pointer_in,#1
                  71                     CMP             pointer_in,#255
                  72                     JUMP            NZ,dataOUT
                  73
                  74
