.\" ====================================================================================================================
.\"
.\"  M   M  OO  RRR    A   V   V III   A      M   M III  OOO  RRR   OO   SSSS Y   Y  SSSS TTTTT EEEEE M   M  SSSS
.\"  MM MM O  O R  R  A A  V   V  I   A A     MM MM  I  O     R  R O  O S      Y Y  S       T   E     MM MM S
.\"  M M M O  O RRR  A   A V   V  I  A   A    M M M  I  O     RRR  O  O  SS     Y    SS     T   EEEEE M M M  SS
.\"  M   M O  O RR   AAAAA  V V   I  AAAAA    M   M  I  O     RR   O  O    SS   Y      SS   T   E     M   M    SS
.\"  M   M O  O R R  A   A  V V   I  A   A    M   M  I  O     R R  O  O      S  Y        S  T   E     M   M      S
.\"  M   M  OO  R  R A   A   V   III A   A    M   M III  OOO  R  R  OO   SSSS   Y    SSSS   T   EEEEE M   M  SSSS
.\"
.\" (C) copyright 2014 Moravia Microsystems, s.r.o.
.\"     trida Kpt. Jarose 1946/35, 602 00 Brno, CZ, European Union
.\"     http://www.moravia-microsystems.com
.\"
.\" ====================================================================================================================

.TH "mds-compiler" "1" "July 2014" "User Commands"
.SH NAME
mds-compiler \- Compiler for processors, microcontrolles, etc. used by the Multitarget Development System by Moravia Microsystems, s.r.o.
.SH USAGE
.B mds-compiler
.I <OPTIONS>
[ -- ]
[
.I source-file ...
]

.SH DESCRIPTION
\fB mds-compiler\fR is macro-assembler developend by Moravia Microsystems, s.r.o. for PicoBlaze soft-core processors. mds-compiler is a tool which take one or more source code files and produces compiled machine code file usable in JTAG loaders, processors simulators, and similar tools; along with these files containing compiled machine code compiler also produces extensive debugging output. mds-compiler is made to run fast and extensively tested for greater reliability, it feature set includes various special macros and user defined macros support making it one of the world most advanced assemblers available on the market today for PicoBlaze soft-core processors. For more information please consult MDS handbook.

.SH OPTIONS
.TP
\fB\-\-arch\fR, \fB\-a\fI <architecture>\fR
Specify target architecture, supported architectures are:
- PicoBlaze: (K)constant Coded Programmable State Machine.
.TP
\fB\-\-plang\fR, \fB\-p\fI <programming-language>\fR
Specify programming language, supported languages are:
- asm: assembly language.

    -x, --hex <Intel HEX file>
        Specify output file with machine code generated as a result of compilation,
        data will be stored in Intel 8 Hex format.
    -d, --dbg <MDS native debug file>
        Specify output file with code for MCU simulator and other debugging tools.
    --srec <Motorola S-REC file>
        Specify output file with machine code generated as a result of compilation,
        data will be stored in Motorola S-record format.
    --binary <binary file>
        Specify output file with machine code generated as a result of compilation,
        data will be stored in raw binary format.
    -l, --lst <code listing>
        Specify output file where code listing generated during compilation will be stored.
    -m, --mtable <table of macros>
        Specify file in which the compiler will put table of macros defined in your code.
    -s, --stable <table of symbols>
        Specify file in which the compiler will put table of symbols defined in your code.
    -h, --help
        (Print this message.)
    -V, --version
        Print compiler version and exit.
    -c, --check
        Do not perform the actual compilation, do only lexical and syntax analysis of the
        the provided source code and exit.
    --no-backup
        Don't generate backup files.
    --brief-msg
        Print only unique messages.
    --no-strict
        Disable certain error and warning messages.
    --no-warnings
        Do not print any warnings.
    --no-errors
        Do not print any errors.
    --no-remarks
        Do not print any remarks.
    --silent
        Do not print any warnings, errors, or any other messages, stay completely silent.
    -I, --include <directory>
        Add directory where the compiler will search for include files.
    -D, --dev <device>
        Specify exact target device.
    -P, --precompile <.prc file>
        Specify target file for generation of precompiled code.
    --vhdl <.vhd file>
        Specify target file for generation of VHDL code.
    --vhdl-tmpl <.vhd file>
        Specify VHDL template file.
    --verilog <.v file>
        Specify target file for generation of verilog code.
    --verilog-tmpl <.v file>
        Specify target file for generation of verilog code.
    --verilog-tmpl <.v file>
        Specify verilog template file.
    --mem <.mem file>
        Specify target file for generation of MEM file.
    --raw-hex-dump <.hex file>
        Specify target file for Raw Hex Dump (sequence of 5 digit long hexadecimal numbers separated by CRLF sequence).

.SH FILES
.TP
.I /usr/local/share/mds/
XML file containing tips. (Dialog "Tip of the day")
.TP
.I /usr/share/mcu8051ide/data/mcus.conf
XML definition of supported MCUs. \fBWarning: MCU 8051 IDE cannot run without this file.\fR Please do not rely on format of this file. It may be changed in future version without any warning.
.TP
.I ~/.mcu8051ide/last_session.conf
INI like definition of the last session.
.TP
.I ~/.mcu8051ide/base.conf
Base configuration file. It contains only three configuration keys separated by spaces, please do not rely on format of this file. It may be changed in future version without any warning.
.TP
.I ~/.mcu8051ide/config.conf
Main configuration file (INI like). Readable and I hope user friendly.

.SH SUPPORTED PROCESSORS
.TP
KCPSM1-CPLD
.TP
KCPSM1
.TP
KCPSM2
.TP
KCPSM3
.TP
KCPSM6

.SH AUTHOR
Moravia Microsystems, s.r.o.
trida Kpt. Jarose 1946/35, 602 00 Brno, CZ, European Union
http://www.moravia-microsystems.com
